openapi: 3.0.0
info:
  title: Web Application Firewall API
  version: 2.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
- description: Production
  url: https://api.azionapi.net
security:
- tokenAuth: []
paths:
  /waf:
    get:
      tags:
      - WAF
      summary: List all Web Application Firewalls (WAFs) created in an account
      operationId: listAllWAF
      parameters:
      - in: query
        name: page
        description: Identifies which page should be returned, if the return is paginated.
        schema:
            type: integer
            format: int64
            default: 1
      - in: query
        name: page_size
        description: Identifies how many items should be returned per page.
        schema:
            type: integer
            format: int64
            default: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFList200'
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
        "403":
          description: Forbidden
        "404":
          description: data not found
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404' 
  /waf/{waf_id}/domains:
    get:
      tags:
      - WAF
      summary: List all domains attached to a Web Application Firewall (WAF) in an account.
      operationId: getWAFDomains
      parameters:
      - in: path
        name: waf_id
        description: ID of WAF to return
        required: true
        schema:
            type: integer
            format: int64
      - in: query
        name: name
        description: searches WAF for name
        required: false
        schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFDomains200'
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
        "403":
          description: Forbidden
        "404":
          description: data not found
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404'   
  /waf/{waf_id}/waf_events:
    get:
      tags:
      - WAF
      summary: Find WAF log events
      operationId: getWAFEvents
      parameters:
      - name: waf_id
        in: path
        description: ID of WAF to return
        required: true
        schema:
            type: integer
            format: int64
      - name: hour_range
        in: query
        description: Last log hours since now (it must be a integer number ranging between 1 and 72)
        required: true
        schema:
            type: integer
            format: int64
      - name: network_list_id
        in: query
        description: Id of a network list
        required: false
        schema:
            type: integer
            format: int64
      - name: domains_ids
        in: query
        description: Multiple domain's id (they must be separated by comma like 1233,1234)
        required: true
        schema:
            type: string
      - name: sort
        in: query
        required: false
        schema:
          type: string
          enum: [asc, desc]
          default: asc
      - name: page
        in: query
        required: false
        schema:
            type: integer
            format: int64
            default: 1
      - name: page_size
        in: query
        required: false
        schema:
            type: integer
            format: int64
            default: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents200'
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
        "401":
          description: unauthorized operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents401'
        "403":
          description: Forbidden
        "404":
          description: data not found
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404'
        "500":
          description: Internal server error
  /waf/rulesets:
    get:
      tags:
      - WAF
      summary: list all Rule Sets associated to a Web Application Firewall (WAF) in an account.
      operationId: listAllWAFRulesets
      parameters:
      - in: query
        name: order_by
        description: Identifies which property the return should be sorted by.
        schema:
            type: string
            enum: [id,name,mode,active,sql_injection,sql_injection_sensitivity,remote_file_inclusion,remote_file_inclusion_sensitivity,directory_traversal,directory_traversal_sensitivity,cross_site_scripting,cross_site_scripting_sensitivity,evading_tricks,evading_tricks_sensitivity,file_upload,file_upload_sensitivity,unwanted_access,unwanted_access_sensitivity,identified_attack,identified_attack_sensitivity]
            default: "name"
      - in: query
        name: sort
        description: Defines whether objects are shown in ascending or descending order depending on the value set in order_by.
        schema:
            type: string
            enum: ["asc", "desc"]
            default: "asc"
      - in: query
        name: page
        description: Identifies which page should be returned, if the return is paginated.
        schema:
            type: integer
            format: int64
            default: 1
      - in: query
        name: page_size
        description: Identifies how many items should be returned per page.
        schema:
            type: integer
            format: int64
            default: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFList200'
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
        "403":
          description: Forbidden
        "404":
          description: data not found
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404'
    post:
      summary: Create a new WAF Rule Set in an account.
      operationId: createNewWAFRuleset
      tags:
      - WAF 
      requestBody:
        content:
          application/json; version=3:
            schema:
              allOf:
                - $ref: '#/components/schemas/SingleWAF'
                - required: [name, mode, active, sql_injection, sql_injection_sensitivity, remote_file_inclusion, remote_file_inclusion_sensitivity, directory_traversal, directory_traversal_sensitivity, cross_site_scripting, cross_site_scripting_sensitivity, evading_tricks, evading_tricks_sensitivity, file_upload, file_upload_sensitivity, unwanted_access, unwanted_access_sensitivity, identified_attack, identified_attack_sensitivity, bypass_addresses]
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/SingleWAF'
          description: Successful response
        "201":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/SingleWAF'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "415":
          description: Unsupported Media Type
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /waf/rulesets/{waf_rule_set_id}:
    get:
      tags:
      - WAF
      summary: List a specific Rule Set associated to a Web Application Firewall (WAF) in an account.
      operationId: getWAFRuleset
      parameters:
      - in: path
        name: waf_rule_set_id
        description: ID of WAF Ruleset to return
        required: true
        schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFSingle200'
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
        "403":
          description: Forbidden
        "404":
          description: data not found
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404'
    patch:
      summary: Change only select settings of a WAF Rule Set
      operationId: updateWAFRuleset
      tags:
      - WAF
      parameters:
      - explode: false
        in: path
        name: waf_rule_set_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/SingleWAF'
      responses:
        "200":
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/SingleWAF'
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      summary: "Remove an WAF Rule Set from an account. Warning: this action cannot be undone."
      operationId: deleteWAFRuleset
      tags:
      - WAF
      parameters:
      - explode: false
        in: path
        name: waf_rule_set_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error

components:
  schemas:
    WAFSensitivityChoices:
      type: string
      enum: ["lowest", "low", "medium", "high", "highest"]
    Links:
      properties:
        previous:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
      type: object
    SingleWAF:
      type: object
      example:
        id: 28852
        name: Waf Name
        mode: counting
        active: true
        sql_injection: true
        sql_injection_sensitivity: medium
        remote_file_inclusion: true
        remote_file_inclusion_sensitivity: medium
        directory_traversal: true
        directory_traversal_sensitivity: medium
        cross_site_scripting: true
        cross_site_scripting_sensitivity: medium
        evading_tricks: true
        evading_tricks_sensitivity: medium
        file_upload: true
        file_upload_sensitivity: medium
        unwanted_access: true
        unwanted_access_sensitivity: medium
        identified_attack: true
        identified_attack_sensitivity: medium
        bypass_addresses: []            
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Identification name for WAF Rule Set.
        mode:
          type: string
          enum: [blocking, counting]
        active:
          type: boolean
        sql_injection:
          type: boolean
        sql_injection_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        remote_file_inclusion:
          type: boolean
        remote_file_inclusion_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        directory_traversal:
          type: boolean
        directory_traversal_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        cross_site_scripting:
          type: boolean
        cross_site_scripting_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        evading_tricks:
          type: boolean
        evading_tricks_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        file_upload:
          type: boolean
        file_upload_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        unwanted_access:
          type: boolean
        unwanted_access_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        identified_attack:
          type: boolean
        identified_attack_sensitivity:
          $ref: '#/components/schemas/WAFSensitivityChoices'
        bypass_addresses:
          type: array
          items:
            type: string
            format: ipv4
      
    WAFSingle200:
      type: object
      properties: 
        results:
          $ref: '#/components/schemas/SingleWAF'
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFList200:
      type: object
      properties:
        count: 
          type: integer
          format: int64
        total_pages: 
          type: integer
          format: int64
        links:
          $ref: '#/components/schemas/Links'
        results:
          items:
            $ref: '#/components/schemas/SingleWAF'
          type: array
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFDomainList200:
      type: object
      example:
        id: 28852
        name: Domain Name
        domain: 28852f.ha.azioncdn.net
        cnames:
        - www.example2.io
        - www.example.com
      properties: 
        id: 
          type: integer
          format: int64
        name:
          type: string
        domain:
          type: string
        cnames:
          type: array
          items:
            type: string
    WAFDomains200:
      type: object
      properties:
        count: 
          type: integer
          format: int64
        total_pages: 
          type: integer
          format: int64
        links: 
          $ref: '#/components/schemas/Links'
        results:
          type: array
          items:
            $ref: '#/components/schemas/WAFDomainList200'
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFEvents400:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Bad Request
              error: bad_request
            properties: {}
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFEvents404:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Network List not found
              error: not_found
            properties: {}
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFEvents200:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              country_count: 
                type: integer
                format: int64
              top_10_countries:
                type: array
                items:
                  type: string
              top_10_ips:
                type: array
                items:
                  type: string
              hit_count: 
                type: integer
                format: int64
              rule_id:  
                type: integer
                format: int64
              ip_count:  
                type: integer
                format: int64
              match_zone: 
                type: string
                enum: [path, query_string, request_header, request_body, raw_body, file_name, cookie]
              path_count:  
                type: integer
                format: int64
              matches_on: 
                type: string
                enum: [name, value]
              rule_description: 
                type: string
        schema_version:
          type: integer
          format: int64
          example: 3
    WAFEvents401:
      type: object
      properties:
        detail:
          type: string
          example:
            "Authentication credentials were not provided."
    
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
