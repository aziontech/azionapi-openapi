openapi: 3.0.0
info:
  title: Domain API
  version: 2.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
  - description: Production
    url: https://api.azionapi.net
security:
  - tokenAuth: []
paths:
  /domains:
    get:
      tags:
        - Domains
      summary: /domains
      description: It returns the list of domains of an account.
      operationId: getDomains
      parameters:
        - explode: true
          in: query
          name: page
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - explode: true
          in: query
          name: page_size
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - explode: true
          in: query
          name: sort
          required: false
          schema:
            type: string
          style: form
        - explode: true
          in: query
          name: order_by
          required: false
          schema:
            type: string
          style: form
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        "200":
          description: Successful response
          content:
            'application/json; version=3':
              schema:
                $ref: "#/components/schemas/DomainResponseWithResults"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error

    post:
      tags:
        - Domains
      summary: /domains
      description: It enables you to include a new domain into an account.
      requestBody:
        content:
          'application/json; version=3':
            schema:
              $ref: "#/components/schemas/CreateDomainRequest"
      operationId: createDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        "200":
          description: Successful response
          content:
            'application/json; version=3':
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /domains/{id}:
    get:
      tags:
        - Domains
      summary: /domains/:id
      description: It returns details of a domain.
      operationId: getDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the domain to be consulted.\t"
      responses:
        "200":
          description: Successful response
          content:
            'application/json; version=3':
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Domains
      summary: /domains/:id
      description: It enables you to delete a domain.
      operationId: delDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the domain to be deleted.\t"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Domains
      summary: /domains:/:id
      description: >-
        It overwrites all fields of a domain, while preserving the id. Optional
        fields not filled in will be replaced by the default values.


        To update only some fields in a domain, consider using the PATCH method
        instead of PUT.
      requestBody:
        content:
          'application/json; version=3':
            schema:
              $ref: "#/components/schemas/PutDomainRequest"
      operationId: putDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            'application/json; version=3':
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Domains
      summary: /domains/:id
      description: >-
        It updates one or more fields in a Domain, preserving the value of the
        fields not informed.
      requestBody:
        content:
          'application/json; version=3':
            schema:
              $ref: "#/components/schemas/UpdateDomainRequest"
      operationId: updateDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            'application/json; version=3':
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
components:
  schemas:
    DomainData:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          pattern: "[a-zA-Z0-9$%^&*()-+=\\[\\]{};:?><,|/]+"
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
          minimum: 1
          maximum: 10000000000000000000
        digital_certificate_id:
          type: string
          minLength: 1
          maxLength: 100
          pattern: "[a-zA-Z0-9$%^&*()-+=\\[\\]{};:?><,|/]+"
        environment:
          type: string
          enum:
            - production
            - preview
        is_mtls_enabled:
          type: boolean
        mtls_trusted_ca_certificate_id:
          type: integer
          format: int64
          nullable: true
        edge_firewall_id:
          type: integer
          format: int64
          nullable: true
        mtls_verification:
          type: string
          enum:
            - enforce
            - permissive
        crl_list:
          nullable: true
          type: array
          items:
            type: integer
            format: int64
    DomainDataResponse:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          pattern: "[a-zA-Z0-9$%^&*()-+=\\[\\]{};:?><,|/]+"
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
          minimum: 1
          maximum: 10000000000000000000
        digital_certificate_id:
          format: int64
          type: integer
          minimum: 1
          maximum: 10000000000000000000
        environment:
          type: string
          enum:
            - production
            - preview
        is_mtls_enabled:
          type: boolean
        mtls_trusted_ca_certificate_id:
          type: integer
          format: int64
          nullable: true
        edge_firewall_id:
          type: integer
          format: int64
          nullable: true
        mtls_verification:
          type: string
          enum:
            - enforce
            - permissive
        crl_list:
          nullable: true
          type: array
          items:
            type: integer
            format: int64       
    DomainEntity:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int64
            domain_name:
              type: string
        - $ref: "#/components/schemas/DomainData"
    DomainEntityResponse:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int64
            domain_name:
              type: string
        - $ref: "#/components/schemas/DomainDataResponse"
    CreateDomainRequest:
      allOf:
        - $ref: "#/components/schemas/DomainData"
      additionalProperties: false
      required:
        - name
        - edge_application_id
        - cnames
    UpdateDomainRequest:
      allOf:
        - $ref: "#/components/schemas/DomainData"
    PutDomainRequest:
      allOf:
        - $ref: "#/components/schemas/DomainData"
      additionalProperties: false
      required:
        - name
        - edge_application_id
        - cnames
    DomainLinks:
      additionalProperties: false
      properties:
        previous:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
      required:
        - previous
        - next
      type: object
    DomainResponseWithResults:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/DomainLinks"
        results:
          items:
            $ref: "#/components/schemas/DomainEntityResponse"
      required:
        - count
        - total_pages
        - schema_version
        - links
        - results
      type: object
    DomainResponseWithResult:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/DomainLinks"
        results:
          $ref: "#/components/schemas/DomainEntityResponse"
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
      required:
        - schema_version
        - results
      type: object
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
