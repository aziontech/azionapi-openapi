openapi: 3.0.0
info:
  title: Domain
  description: >-
    ## Welcome to the Azion API!


    With the following APIs you can check, remove or update existing settings,
    besides creating new ones.


    * * *


    ## Overview


    The Azion API is a RESTful API, based on HTTPS requests, that allows you to
    integrate your systems with our platform, simply, quickly, and securely.


    Here you will find instructions on how our API works and what functionality
    is available.


    This documentation is being constantly updated. Make sure you verify if
    there are any updates or changes before you perform any development in your
    application, even if you are familiar with our API.


    * * *


    Both HTTPS requests and responses must be in JavaScript Object Notation
    (JSON) format. All HTTPS requests and responses must follow these
    conventions.


    **Base URL**


    The base URL of the API, which must be used, is:


    [**https://api.azionapi.net/**](https://api.azionapi.net/)


    **HTTP Methods**


    Each HTTP method defines the type of operation that will be run.


    | HTTP Method | CRUD | Whole Collection (e.g. /items) | Specific Item (e.g.
    /items/:item_id) |

    | --- | --- | --- | --- |

    | GET | Read | It retrieves the list of items in a Collection. | It
    retrieves a specific item in a Collection. |

    | POST | Create | It creates a new item in the Collection. | \- |

    | PUT | Update/Replace | It replaces a whole Collection with a new one. | It
    replaces an item in a Collection with a new one. |

    | PATCH | Update/Modify | It partially updates a Collection. | It partially
    updates an item in a Collection |

    | DELETE | Delete | It deletes a whole Collection. | It deletes an item in a
    Collection. |


    * * *


    **Status Codes**


    The HTTP return code defines the status – successful or not – after the
    requested operation is run.


    | Status Code | Meaning |

    | --- | --- |

    | 200 OK | General Status for a successful operation. |

    | 201 CREATED | Successfully created a collection or item, by means of POST
    or PUT. |

    | 204 NO CONTENT | Successful operation, but without any content to be
    return to the Body. Generally used for DELETE or PUT operations. |

    | 207 MULTI-STATUS | A batch of operations were triggered by a single
    request, which resulted in different return codes when it was run, for some
    of the operations. The codes are displayed in the “status” field, in the
    body of the response, for each sub-batch of operations for whichever are
    applicable. |

    | 400 BAD REQUEST | Request error, such as invalid parameters, missing
    mandatory parameters or others. |

    | 401 UNAUTHORIZED | Error caused by a missing HTTP Authentication header. |

    | 403 FORBIDDEN | User does not have the permissions to run the requested
    operation. |

    | 404 NOT FOUND | The requested resource does not exist. |

    | 405 METHOD NOT ALLOWED | The requested method is not applicable with the
    URL. |

    | 406 NOT ACCEPTABLE | Accept header missing from the HTTP request or the
    header contains formatting or the version is not supported by the API. |

    | 409 CONFLICT | Conflict generated in running the request, such as a
    request to create an already existing record. |

    | 429 TOO MANY REQUESTS | The request was temporarily rejected, due to
    exceeding the limit on operations. Wait for the time defined in the
    X-Ratelimit-Reset header and try again. |

    | 500 INTERNAL SERVER ERROR | Unintentional error, due to an unidentified
    failure in the request process. |

    | \--- |  |

    | **HTTP Headers** |  |


    All requests must be generated with the HTTP header specifying the desired
    code format for responses and the API version used. The current version of
    the API is 3 and the format is application/json.


    ```

    Accept: application/json; version=3


    ```


    * * *


    **Rate Limit**


    The limit of operations that can be run via the API is defined by 3 HTTP
    response headers:


    *   **X-ratelimit-limit:** number of operations allowed in one time-frame;

    *   **X-ratelimit-remaining:** number of operations still available in one
    time-frame;

    *   **X-ratelimit-reset:** is the date and time, in IOS 8601 format, which
    represents the point in the future when the time-frame will be closed and
    when the limits will, therefore, be reset.
        

    Example of HTTP response headers and a request:


    ```

    Date: Thu, 02 Nov 2017 12:30:28 GMT

    X-ratelimit-remaining: 199

    X-ratelimit-limit: 200

    X-ratelimit-reset: 2017-11-02T12:31:28.675446


    ```


    In the example provided, 200 operations are allowed within a 1-minute time
    frame. Of those, there are 199 still available, because one has already been
    run. The total limit will be reset after 1 minute.


    When the X-ratelimit-limit is reached, or in other words, when the
    X-ratelimit-remaining reaches zero, the API will give the error, HTTP 429
    TOO MANY REQUESTS. If your application receives this error, you will need to
    wait until the time defined in X-ratelimit-reset has passed, to make another
    request.


    *   **X-ratelimit-limit by product**
        

    The *X-ratelimit limit* variations by product are the following:


    *   **Real-Time Metrics:** 20 requests per minute.

    *   **Real-Time Purge:** 200 requests per minute; except for the Wildcard,
    which is 2000 a day.
        

    > The rate-limit values are based on the client_id.


    * * *


    **Optional Parameters**


    In this version, it is possible to include some optional parameters as part
    of the GET method, which can help and modify the form in which your data
    will be returned.


    You can combine these parameters to get the result you want.


    They are:


    | Parameter | Description | Accepted values: |

    | --- | --- | --- |

    | order_by | Identifies which field the return should be sorted by. The
    default ordering is ascending. | Depends on the fields available from the
    endpoint structure |

    | sort | Defines which ordering to be used: ascending or descending. | asc 
    <br>  <br>desc |

    | page | Identifies which page should be returned, if the return is
    paginated. The default value is 1. | Page number. |

    | page_size | Identifies how many items should be returned per page. The
    default value is 10. | Desired number of items. |


    * * *


    **Request Exemple**


    You can use one parameter, or a combination. See the example below, which
    uses all of them in the same request.


    ```

    GET /domains?order_by=name&page_size=20&sort=desc&page=3

    Accept: application/json; version=3

    Authorization: token 2909f3932069047f4736dc87e72baaddd19c9f75


    ```


    * * *


    # Authentication


    Authentication and authorization of operations via Azion API is done through
    Tokens.


    The first step is to create the Token through authenticating a user
    registered in [Real-Time Manager](https://sso.azion.com/login).


    * * *


    ## Encoding Username and Password in Base64


    Only token creation and cancelling operations are performed through Basic
    Authentication, that is, with a username and password. You can create and
    cancel the token through the API itself, but for that you need to encode
    your username and password in base64.


    Base64 encoding can be done from the command line on a Unix terminal:


    ```

    $ echo 'user@domain:password'|base64

    dXNlckBkb21haW46cGFzc3dvcmQK


    ```


    If you do not have a Unix terminal available, you can use the free online
    service at [https://www.base64encode.org/](https://www.base64encode.org/)
  version: 1.0.0
servers:
  - url: https://api.azionapi.net
  - url: https://stage-api.azionapi.net
components:
  schemas:
    CreateDomainRequest:
      additionalProperties: false
      properties:
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          type: integer
          nullable: true
      required:
      - name
      - edge_application_id
      - cname_access_only
      - cnames
      - is_active
      - digital_certificate_id
      type: object
    UpdateDomainRequest:
      additionalProperties: false
      properties:
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          type: integer
          nullable: true
      type: object
    PutDomainRequest:
      additionalProperties: false
      properties:
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        name:
          type: string
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          type: integer
          nullable: true
      required:
      - name
      - edge_application_id
      - cname_access_only
      - cnames
      - is_active
      - digital_certificate_id
      type: object
    DomainLinks:
      additionalProperties: false
      properties:
        previous:
          type: string
        next:
          type: string
      required:
      - previous
      - next
      type: object
    DomainResponseWithResults:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        domain_name:
          type: string
        environment:
          type: string
        links:
          $ref: '#/components/schemas/DomainLinks'
          type: object
        results:
          items:
            $ref: '#/components/schemas/DomainResults'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - domain_name
      - environment
      - links
      - results
      type: object
    DomainResponseWithResult:
      additionalProperties: false
      properties:
        schema_version:
          format: int64
          type: integer
        results:
          $ref: '#/components/schemas/DomainResults'
          type: object
      required:
      - schema_version
      - results
      type: object
    DomainResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        cnames:
          type: array
          items:
            type: string
        cname_access_only:
          type: boolean
        is_active:
          type: boolean
        edge_application_id:
          format: int64
          type: integer
        digital_certificate_id:
          format: int64
          type: integer
          nullable: true
        domain_name:
          type: string
        environment:
          type: string
      required:
      - id
      - name
      - type
      - content_type
      - last_editor
      - updated_at
      type: object
  securitySchemes:
    JWT:
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
      in: header
      name: Authorization
      type: apiKey
tags:
  - name: Domains
    description: >-
      Through My Domains API you can retrieve, create, remove or update Domains
      used by Edge Applications
paths:
  /domains:
    get:
      tags:
        - Domains
      summary: /domains
      description: It returns the list of domains of an account.
      security:
        - JWT: []
      operationId: getDomains
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DomainResponseWithResults"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
            
    post:
      tags:
        - Domains
      summary: /domains
      description: It enables you to include a new domain into an account.
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
              example:
                name: My Domain
                cnames: []
                cname_access_only: false
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
      security:
       - JWT: []
      operationId: createDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /domains/{id}:
    get:
      tags:
        - Domains
      summary: /domains/:id
      description: It returns details of a domain.
      security:
        - JWT: []
      operationId: getDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the domain to be consulted.\t"
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Domains
      summary: /domains/:id
      description: It enables you to delete a domain.
      security:
        - JWT: []
      operationId: delDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the domain to be deleted.\t"
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
          
  /domains/{domain_id}:
    put:
      tags:
        - Domains
      summary: /domains:/:domain_id
      description: >-
        It overwrites all fields of a domain, while preserving the id. Optional
        fields not filled in will be replaced by the default values.


        To update only some fields in a domain, consider using the PATCH method
        instead of PUT.
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PutDomainRequest'
              example:
                name: My Domain
                cnames: []
                cname_access_only: false
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
      security:
        - JWT: []
      operationId: putDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: domain_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Domains
      summary: /domains/:domain_id
      description: >-
        It updates one or more fields in a Domain, preserving the value of the
        fields not informed.
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
              example:
                name: Validation Fafinha
                cnames: []
                cname_access_only: false
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
      security:
        - JWT: []
      operationId: updateDomain
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: domain_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DomainResponseWithResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
