components:
  parameters:
    RecordId:
      description: The zone record id
      explode: false
      in: path
      name: record_id
      required: true
      schema:
        minimum: 1
        type: integer
      style: simple
    ZoneId:
      description: The hosted zone id
      explode: false
      in: path
      name: zone_id
      required: true
      schema:
        minimum: 1
        type: integer
      style: simple
  requestBodies:
    CreateEdgeFunctionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEdgeFunctionRequest'
      required: true
    PatchEdgeFunctionRequest:
      content:
        application/json; version=3:
          schema:
            $ref: '#/components/schemas/PatchEdgeFunctionRequest'
      required: true
    PutEdgeFunctionRequest:
      content:
        application/json; version=3:
          schema:
            $ref: '#/components/schemas/PutEdgeFunctionRequest'
      required: true
  responses:
    '401':
      content:
        application/json:
          schema:
            properties:
              detail:
                type: string
            type: object
      description: Token/Personal Token has been expired or invalid
  schemas:
    ApplicationCacheCreateRequest:
      additionalProperties: false
      example:
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 0
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 6
        cookie_names:
        - cookie_names
        - cookie_names
        enable_caching_for_post: true
        enable_query_string_sort: true
        is_slice_configuration_enabled: true
        is_slice_edge_caching_enabled: true
        is_slice_l2_caching_enabled: true
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
        slice_configuration_range: 1
      properties:
        adaptive_delivery_action:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          type: array
        enable_caching_for_options:
          type: boolean
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          type: array
        slice_configuration_range:
          format: int64
          type: integer
      required:
      - name
      type: object
    ApplicationCacheCreateResponse:
      additionalProperties: false
      example:
        results:
          adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 6
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 1
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 0
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        schema_version: 5
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheCreateResults'
        schema_version:
          format: int64
          type: integer
      type: object
    ApplicationCacheCreateResults:
      additionalProperties: false
      example:
        adaptive_delivery_action: adaptive_delivery_action
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 6
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 1
        cookie_names:
        - cookie_names
        - cookie_names
        device_group:
        - device_group
        - device_group
        enable_caching_for_post: true
        enable_query_string_sort: true
        id: 0
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
      properties:
        adaptive_delivery_action:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          type: array
        device_group:
          items:
            type: string
          type: array
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        id:
          format: int64
          type: integer
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          type: array
      required:
      - adaptive_delivery_action
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cache_by_cookies
      - cache_by_query_string
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cookie_names
      - device_group
      - enable_caching_for_post
      - enable_query_string_sort
      - id
      - l2_caching_enabled
      - name
      - query_string_fields
      type: object
    ApplicationCacheGetOneResponse:
      additionalProperties: false
      example:
        results:
          adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 5
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 2
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 5
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    ApplicationCacheGetResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 5
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 2
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 5
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        - adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 5
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 2
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 5
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
        results:
          items:
            $ref: '#/components/schemas/ApplicationCacheResults'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    ApplicationCachePatchRequest:
      additionalProperties: false
      example:
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 0
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 6
        cookie_names:
        - cookie_names
        - cookie_names
        enable_caching_for_post: true
        enable_query_string_sort: true
        is_slice_configuration_enabled: true
        is_slice_edge_caching_enabled: true
        is_slice_l2_caching_enabled: true
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
        slice_configuration_range: 1
      properties:
        adaptive_delivery_action:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          type: array
        enable_caching_for_options:
          type: boolean
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          type: array
        slice_configuration_range:
          format: int64
          type: integer
      type: object
    ApplicationCachePatchResponse:
      additionalProperties: false
      example:
        results:
          adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 6
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 1
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 0
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResponseDetails'
        schema_version:
          format: int64
          type: integer
      type: object
    ApplicationCachePutRequest:
      additionalProperties: false
      example:
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 0
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 6
        cookie_names:
        - cookie_names
        - cookie_names
        enable_caching_for_post: true
        enable_query_string_sort: true
        is_slice_configuration_enabled: true
        is_slice_edge_caching_enabled: true
        is_slice_l2_caching_enabled: true
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
        slice_configuration_range: 1
      properties:
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          type: array
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          type: array
        slice_configuration_range:
          format: int64
          type: integer
      required:
      - name
      type: object
    ApplicationCachePutResponse:
      additionalProperties: false
      example:
        results:
          adaptive_delivery_action: adaptive_delivery_action
          browser_cache_settings: browser_cache_settings
          browser_cache_settings_maximum_ttl: 6
          cache_by_cookies: cache_by_cookies
          cache_by_query_string: cache_by_query_string
          cdn_cache_settings: cdn_cache_settings
          cdn_cache_settings_maximum_ttl: 1
          cookie_names:
          - cookie_names
          - cookie_names
          device_group:
          - device_group
          - device_group
          enable_caching_for_post: true
          enable_query_string_sort: true
          id: 0
          l2_caching_enabled: true
          name: name
          query_string_fields:
          - query_string_fields
          - query_string_fields
        schema_version: 5
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResponseDetails'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    ApplicationCacheResponseDetails:
      additionalProperties: false
      example:
        adaptive_delivery_action: adaptive_delivery_action
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 6
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 1
        cookie_names:
        - cookie_names
        - cookie_names
        device_group:
        - device_group
        - device_group
        enable_caching_for_post: true
        enable_query_string_sort: true
        id: 0
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
      properties:
        adaptive_delivery_action:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          nullable: true
          type: array
        device_group:
          items:
            type: string
          type: array
        enable_caching_for_options:
          type: boolean
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        id:
          format: int64
          type: integer
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          nullable: true
          type: array
      required:
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cache_by_cookies
      - cache_by_query_string
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cookie_names
      - enable_caching_for_post
      - enable_query_string_sort
      - id
      - l2_caching_enabled
      - name
      - query_string_fields
      type: object
    ApplicationCacheResults:
      additionalProperties: false
      example:
        adaptive_delivery_action: adaptive_delivery_action
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 5
        cache_by_cookies: cache_by_cookies
        cache_by_query_string: cache_by_query_string
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 2
        cookie_names:
        - cookie_names
        - cookie_names
        device_group:
        - device_group
        - device_group
        enable_caching_for_post: true
        enable_query_string_sort: true
        id: 5
        l2_caching_enabled: true
        name: name
        query_string_fields:
        - query_string_fields
        - query_string_fields
      properties:
        adaptive_delivery_action:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_cookies:
          type: string
        cache_by_query_string:
          type: string
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cookie_names:
          items:
            type: string
          type: array
        device_group:
          items:
            type: string
          type: array
        enable_caching_for_post:
          type: boolean
        enable_query_string_sort:
          type: boolean
        id:
          format: int64
          type: integer
        l2_caching_enabled:
          type: boolean
        name:
          type: string
        query_string_fields:
          items:
            type: string
          type: array
      required:
      - adaptive_delivery_action
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cache_by_cookies
      - cache_by_query_string
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cookie_names
      - device_group
      - enable_caching_for_post
      - enable_query_string_sort
      - id
      - l2_caching_enabled
      - name
      - query_string_fields
      type: object
    ApplicationCreateInstanceRequest:
      example:
        args: ''
        edge_function_id: 0
        name: name
      properties:
        args: {}
        edge_function_id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - args
      - edge_function_id
      - name
    ApplicationInstanceResults:
      additionalProperties: false
      example:
        results:
          args: ''
          edge_function_id: 5
          id: 5
          name: name
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationInstancesResults'
        schema_version:
          format: int64
          type: integer
      type: object
    ApplicationInstancesGetOneResponse:
      additionalProperties: false
      example:
        results:
          args: ''
          edge_function_id: 5
          id: 5
          name: name
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationInstancesResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    ApplicationInstancesGetResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - args: ''
          edge_function_id: 5
          id: 5
          name: name
        - args: ''
          edge_function_id: 5
          id: 5
          name: name
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
        results:
          items:
            $ref: '#/components/schemas/ApplicationInstancesResults'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    ApplicationInstancesResults:
      example:
        args: ''
        edge_function_id: 5
        id: 5
        name: name
      properties:
        args: {}
        edge_function_id:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - args
      - edge_function_id
      - id
      - name
    ApplicationLinks:
      additionalProperties: false
      example:
        next: next
        previous: previous
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
      required:
      - next
      - previous
      type: object
    ApplicationOrigins:
      additionalProperties: false
      properties:
        name:
          type: string
        origin_id:
          type: string
        origin_type:
          type: string
      required:
      - next
      - previous
      type: object
    ApplicationPutInstanceRequest:
      example:
        args: ''
        edge_function_id: 0
        name: name
      properties:
        args: {}
        edge_function_id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - args
      - edge_function_id
      - name
    ApplicationPutRequest:
      additionalProperties: false
      example:
        active: true
        application_acceleration: true
        caching: true
        delivery_protocol: delivery_protocol
        device_detection: true
        edge_firewall: true
        edge_functions: true
        http_port:
        - 0
        https_port:
        - 6
        image_optimization: true
        l2_caching: true
        load_balancer: true
        minimum_tls_version: minimum_tls_version
        name: name
        raw_logs: true
        web_application_firewall: true
      properties:
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        delivery_protocol:
          type: string
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        http_port: {}
        https_port: {}
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        minimum_tls_version:
          type: string
        name:
          type: string
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      required:
      - name
      type: object
    ApplicationPutResult:
      additionalProperties: false
      example:
        results:
          active: true
          application_acceleration: true
          caching: true
          delivery_protocol: delivery_protocol
          device_detection: true
          edge_firewall: true
          edge_functions: true
          http_port:
          - 6
          https_port:
          - 1
          id: 0
          image_optimization: true
          l2_caching: true
          load_balancer: true
          minimum_tls_version: minimum_tls_version
          name: name
          raw_logs: true
          web_application_firewall: true
        schema_version: 5
      properties:
        results:
          $ref: '#/components/schemas/ApplicationUpdateResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    ApplicationResults:
      additionalProperties: false
      example:
        active: true
        application_acceleration: true
        caching: true
        debug_rules: true
        delivery_protocol: delivery_protocol
        device_detection: true
        edge_firewall: true
        edge_functions: true
        http3: true
        http_port:
        - 5
        https_port:
        - 2
        id: 5
        image_optimization: true
        l2_caching: true
        load_balancer: true
        minimum_tls_version: minimum_tls_version
        name: name
        raw_logs: true
        supported_ciphers: supported_ciphers
        web_application_firewall: true
      properties:
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        debug_rules:
          type: boolean
        delivery_protocol:
          type: string
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        http3:
          type: boolean
        http_port: {}
        https_port: {}
        id:
          format: int64
          type: integer
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        minimum_tls_version:
          type: string
        name:
          type: string
        raw_logs:
          type: boolean
        supported_ciphers:
          type: string
        web_application_firewall:
          type: boolean
      required:
      - active
      - debug_rules
      - http3
      - supported_ciphers
      - application_acceleration
      - caching
      - delivery_protocol
      - device_detection
      - edge_firewall
      - edge_functions
      - http_port
      - https_port
      - id
      - image_optimization
      - l2_caching
      - load_balancer
      - minimum_tls_version
      - name
      - raw_logs
      - web_application_firewall
      type: object
    ApplicationResultsCreate:
      additionalProperties: false
      example:
        active: true
        application_acceleration: true
        caching: true
        debug_rules: true
        delivery_protocol: delivery_protocol
        device_detection: true
        edge_firewall: true
        edge_functions: true
        http3: true
        http_port:
        - 6
        https_port:
        - 1
        id: 0
        image_optimization: true
        load_balancer: true
        minimum_tls_version: minimum_tls_version
        name: name
        raw_logs: true
        supported_ciphers: supported_ciphers
        web_application_firewall: true
      properties:
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        debug_rules:
          type: boolean
        delivery_protocol:
          type: string
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        http3:
          type: boolean
        http_port: {}
        https_port: {}
        id:
          format: int64
          type: integer
        image_optimization:
          type: boolean
        load_balancer:
          type: boolean
        minimum_tls_version:
          type: string
        name:
          type: string
        raw_logs:
          type: boolean
        supported_ciphers:
          type: string
        web_application_firewall:
          type: boolean
      required:
      - active
      - debug_rules
      - supported_ciphers
      - http3
      - application_acceleration
      - caching
      - delivery_protocol
      - device_detection
      - edge_firewall
      - edge_functions
      - http_port
      - https_port
      - id
      - image_optimization
      - load_balancer
      - minimum_tls_version
      - name
      - raw_logs
      - web_application_firewall
      type: object
    ApplicationUpdateInstanceRequest:
      example:
        args: ''
        edge_function_id: 0
        name: name
      properties:
        args: {}
        edge_function_id:
          format: int64
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      required:
      - args
      - edge_function_id
      - name
    ApplicationUpdateRequest:
      additionalProperties: false
      example:
        active: true
        application_acceleration: true
        caching: true
        debug_rules: false
        delivery_protocol: delivery_protocol
        device_detection: true
        edge_firewall: true
        edge_functions: true
        http_port:
        - 0
        https_port:
        - 6
        image_optimization: true
        l2_caching: true
        load_balancer: true
        minimum_tls_version: minimum_tls_version
        name: name
        raw_logs: true
        web_application_firewall: true
      properties:
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        debug_rules:
          type: boolean
        delivery_protocol:
          type: string
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        http_port: {}
        https_port: {}
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        minimum_tls_version:
          type: string
        name:
          type: string
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
    ApplicationUpdateResponse:
      additionalProperties: false
      example:
        results:
          active: true
          application_acceleration: true
          caching: true
          debug_rules: true
          delivery_protocol: delivery_protocol
          device_detection: true
          edge_firewall: true
          edge_functions: true
          http3: true
          http_port:
          - 6
          https_port:
          - 1
          id: 0
          image_optimization: true
          l2_caching: true
          load_balancer: true
          minimum_tls_version: minimum_tls_version
          name: name
          raw_logs: true
          supported_ciphers: all
          web_application_firewall: true
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationUpdateResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    ApplicationUpdateResults:
      additionalProperties: false
      example:
        active: true
        application_acceleration: true
        caching: true
        debug_rules: true
        delivery_protocol: delivery_protocol
        device_detection: true
        edge_firewall: true
        edge_functions: true
        http3: true
        http_port:
        - 6
        https_port:
        - 1
        id: 0
        image_optimization: true
        l2_caching: true
        load_balancer: true
        minimum_tls_version: minimum_tls_version
        name: name
        raw_logs: true
        supported_ciphers: supported_ciphers
        web_application_firewall: true
      properties:
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        debug_rules:
          type: boolean
        delivery_protocol:
          type: string
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        http3:
          type: boolean
        http_port: {}
        https_port: {}
        id:
          format: int64
          type: integer
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        minimum_tls_version:
          type: string
        name:
          type: string
        raw_logs:
          type: boolean
        supported_ciphers:
          type: string
        web_application_firewall:
          type: boolean
      required:
      - active
      - supported_ciphers
      - http3
      - debug_rules
      - application_acceleration
      - caching
      - delivery_protocol
      - device_detection
      - edge_firewall
      - edge_functions
      - http_port
      - https_port
      - id
      - image_optimization
      - l2_caching
      - load_balancer
      - minimum_tls_version
      - name
      - raw_logs
      - web_application_firewall
      type: object
    ApplicationsResults:
      additionalProperties: false
      properties:
        active:
          type: boolean
        debug_rules:
          type: boolean
        id:
          format: int64
          type: integer
        last_editor:
          type: string
        last_modified:
          type: string
        name:
          type: string
        origins:
          items:
            $ref: '#/components/schemas/ApplicationOrigins'
          type: array
      required:
      - next
      - previous
      type: object
    AuthToken:
      additionalProperties: false
      properties:
        client_id:
          type: string
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          format: int64
          type: integer
        is_active:
          type: boolean
        last_editor:
          type: string
        name:
          type: string
        token:
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - client_id
      - created_at
      - id
      - is_active
      - last_editor
      - name
      - token
      - updated_at
      type: object
    AuthorizeEdgeNodesRequest:
      additionalProperties: false
      properties:
        edge_node_ids:
          items:
            format: int64
            type: integer
          type: array
      required:
      - edge_node_ids
      type: object
    AuthorizeEdgeNodesResponse:
      additionalProperties: false
      properties:
        authorized:
          items:
            format: int64
            type: integer
          type: array
        errors:
          items:
            $ref: '#/components/schemas/UnauthorizedEdgeNodeInfo'
          type: array
      required:
      - authorized
      - errors
      type: object
    BadRequestResponse:
      properties:
        active:
          items:
            type: string
          type: array
        code:
          items:
            type: string
          type: array
        domains:
          items:
            type: string
          type: array
        edge_function:
          items:
            type: string
          type: array
        edge_functions_enabled:
          items:
            type: string
          type: array
        is_active:
          items:
            type: string
          type: array
        items_values:
          items:
            type: string
          type: array
        json_args:
          items:
            type: string
          type: array
        language:
          items:
            type: string
          type: array
        list_type:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        network_protection_enabled:
          items:
            type: string
          type: array
        waf_enabled:
          items:
            type: string
          type: array
      type: object
    CreateApplicationRequest:
      additionalProperties: false
      example:
        address: address
        browser_cache_settings: browser_cache_settings
        browser_cache_settings_maximum_ttl: 0
        cdn_cache_settings: cdn_cache_settings
        cdn_cache_settings_maximum_ttl: 6
        delivery_protocol: delivery_protocol
        host_header: host_header
        name: name
        origin_protocol_policy: origin_protocol_policy
        origin_type: origin_type
      properties:
        address:
          type: string
        application_acceleration:
          type: boolean
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        delivery_protocol:
          type: string
        host_header:
          type: string
        name:
          type: string
        origin_protocol_policy:
          type: string
        origin_type:
          type: string
      required:
      - name
      type: object
    CreateApplicationResult:
      additionalProperties: false
      example:
        results:
          active: true
          application_acceleration: true
          caching: true
          debug_rules: true
          delivery_protocol: delivery_protocol
          device_detection: true
          edge_firewall: true
          edge_functions: true
          http3: true
          http_port:
          - 6
          https_port:
          - 1
          id: 0
          image_optimization: true
          load_balancer: true
          minimum_tls_version: minimum_tls_version
          name: name
          raw_logs: true
          supported_ciphers: supported_ciphers
          web_application_firewall: true
        schema_version: 5
      properties:
        results:
          $ref: '#/components/schemas/ApplicationResultsCreate'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    CreateCredentialRequest:
      additionalProperties: false
      properties:
        description:
          type: string
        name:
          type: string
        status:
          type: boolean
      required:
      - name
      - description
      - status
      type: object
    CreateDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          type: string
        user_agent:
          type: string
      required:
      - addresses
      - user_agent
      type: object
    CreateDomainRequest:
      additionalProperties: false
      properties:
        cname_access_only:
          type: boolean
        cnames:
          items:
            type: string
          type: array
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
        edge_application_id:
          format: int64
          type: integer
        is_active:
          type: boolean
        name:
          type: string
      required:
      - name
      - edge_application_id
      - cname_access_only
      - cnames
      - is_active
      - digital_certificate_id
      type: object
    CreateEdgeFirewallRequest:
      properties:
        domains:
          items:
            type: integer
          type: array
        edge_functions_enabled:
          type: boolean
        is_active:
          type: boolean
        name:
          type: string
        network_protection_enabled:
          type: boolean
        waf_enabled:
          type: boolean
      type: object
    CreateEdgeFunctionRequest:
      example:
        active: true
        code: code
        json_args: ''
        language: language
        name: name
      properties:
        active:
          type: boolean
        code:
          type: string
        is_proprietary_code:
          type: boolean
        json_args: {}
        language:
          type: string
        name:
          type: string
      type: object
    CreateEdgeFunctionsInstancesRequest:
      properties:
        edge_function:
          example: 13
          type: integer
        json_args:
          example: {}
          type: object
        name:
          example: Edge Functions Instance
          type: string
      type: object
    CreateNetworkListsRequest:
      properties:
        items_values:
          example:
          - 192.168.0.1
          items:
            type: string
          type: array
        list_type:
          example: ip_cidr
          type: string
        name:
          example: Network List created using the API
          type: string
      type: object
    CreateOriginsRequest:
      additionalProperties: false
      example:
        addresses:
        - address: address
        - address: address
        hmac_access_key: hmac_access_key
        hmac_authentication: true
        hmac_region_name: hmac_region_name
        hmac_secret_key: hmac_secret_key
        host_header: host_header
        name: name
        origin_path: origin_path
        origin_protocol_policy: origin_protocol_policy
        origin_type: origin_type
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/CreateOriginsRequest_addresses'
          type: array
        hmac_access_key:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_secret_key:
          type: string
        host_header:
          type: string
        name:
          type: string
        origin_path:
          type: string
        origin_protocol_policy:
          type: string
        origin_type:
          type: string
      required:
      - addresses
      - host_header
      - name
      type: object
    CreateOriginsRequest_addresses:
      example:
        address: address
      properties:
        address:
          type: string
      required:
      - address
      type: object
    CreateResourceRequest:
      additionalProperties: false
      example:
        content: content
        content_type: content_type
        name: name
        trigger: trigger
      properties:
        content:
          type: string
        content_type:
          type: string
        name:
          type: string
        trigger:
          type: string
      required:
      - content
      - content_type
      - name
      - trigger
      type: object
    CreateRulesEngineRequest:
      example:
        behaviors:
        - name: name
          target: ''
        - name: name
          target: ''
        criteria:
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        name: name
      properties:
        behaviors:
          items:
            $ref: '#/components/schemas/RulesEngineBehavior'
          type: array
        criteria:
          items:
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
            type: array
          type: array
        name:
          type: string
      required:
      - behaviors
      - criteria
      - name
      type: object
    CreateServiceRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    DeviceGroupsIdResponse:
      additionalProperties: false
      example:
        results:
          id: 5
          name: name
          user_agent: user_agent
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/DeviceGroupsResultResponse'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    DeviceGroupsResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - id: 5
          name: name
          user_agent: user_agent
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/DeviceGroupsResponse_links'
        results:
          items:
            $ref: '#/components/schemas/DeviceGroupsResultResponse'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    DeviceGroupsResponse_links:
      example:
        next: next
        previous: previous
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
      type: object
    DeviceGroupsResultResponse:
      additionalProperties: false
      example:
        id: 5
        name: name
        user_agent: user_agent
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        user_agent:
          type: string
      required:
      - name
      - user_agent
      type: object
    DnsSec:
      example:
        delegation_signer:
          algorithm_type:
            id: 6
            slug: slug
          digest: digest
          digest_type:
            id: 6
            slug: slug
          key_tag: 9607
        is_enabled: true
        status: unconfigured
      properties:
        delegation_signer:
          $ref: '#/components/schemas/DnsSec_delegation_signer'
        is_enabled:
          type: boolean
        status:
          enum:
          - unconfigured
          - waiting
          - ready
          type: string
      type: object
    DnsSec_delegation_signer:
      example:
        algorithm_type:
          id: 6
          slug: slug
        digest: digest
        digest_type:
          id: 6
          slug: slug
        key_tag: 9607
      properties:
        algorithm_type:
          $ref: '#/components/schemas/DnsSec_delegation_signer_digest_type'
        digest:
          type: string
        digest_type:
          $ref: '#/components/schemas/DnsSec_delegation_signer_digest_type'
        key_tag:
          maximum: 65535
          minimum: 1
          type: integer
      type: object
    DnsSec_delegation_signer_digest_type:
      example:
        id: 6
        slug: slug
      properties:
        id:
          type: integer
        slug:
          type: string
      type: object
    DomainLinks:
      additionalProperties: false
      properties:
        next:
          type: string
        previous:
          type: string
      required:
      - previous
      - next
      type: object
    DomainResponseWithResult:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/DomainResults'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
      - schema_version
      - results
      type: object
    DomainResponseWithResults:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/DomainLinks'
          type: object
        results:
          items:
            $ref: '#/components/schemas/DomainResults'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results
      type: object
    DomainResults:
      additionalProperties: false
      properties:
        cname_access_only:
          type: boolean
        cnames:
          items:
            type: string
          type: array
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
        domain_name:
          type: string
        edge_application_id:
          format: int64
          type: integer
        environment:
          type: string
        id:
          format: int64
          type: integer
        is_active:
          type: boolean
        name:
          type: string
      required:
      - id
      - name
      - type
      - content_type
      - last_editor
      - updated_at
      type: object
    EdgeFirewall:
      example:
        debug_rules: true
        domains:
        - 5
        - 5
        edge_functions_enabled: true
        id: 5
        is_active: true
        last_editor: last_editor
        last_modified: last_modified
        name: name
        network_protection_enabled: true
        waf_enabled: true
      properties:
        debug_rules:
          type: boolean
        domains:
          items:
            type: integer
          type: array
        edge_functions_enabled:
          type: boolean
        id:
          format: int64
          type: integer
        is_active:
          type: boolean
        last_editor:
          type: string
        last_modified:
          type: string
        name:
          type: string
        network_protection_enabled:
          type: boolean
        waf_enabled:
          type: boolean
      type: object
    EdgeFirewallResponse:
      example:
        results:
          debug_rules: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          is_active: true
          last_editor: last_editor
          last_modified: last_modified
          name: name
          network_protection_enabled: true
          waf_enabled: true
        schema_version: 0.8008281904610115
      properties:
        results:
          $ref: '#/components/schemas/EdgeFirewall'
        schema_version:
          type: number
      type: object
    EdgeFunctionResponse:
      example:
        results:
          active: true
          code: code
          function_to_run: function_to_run
          id: 5
          initiator_type: initiator_type
          json_args: '{}'
          language: language
          last_editor: last_editor
          modified: modified
          name: name
          reference_count: 5
        schema_version: 1
      properties:
        results:
          $ref: '#/components/schemas/Results'
        schema_version:
          type: number
      type: object
    EdgeFunctionsInstance:
      example:
        edge_function: 3254
        id: 1614
        json_args: {}
        name: asdasdsad
      properties:
        edge_function:
          example: 3254
          type: integer
        id:
          example: 1614
          type: integer
        json_args:
          example: {}
          type: object
        name:
          example: asdasdsad
          type: string
      type: object
    EdgeFunctionsInstanceResponse:
      example:
        results:
          edge_function: 3254
          id: 1614
          json_args: {}
          name: asdasdsad
        schema_version: 0.8008281904610115
      properties:
        results:
          $ref: '#/components/schemas/EdgeFunctionsInstance'
        schema_version:
          type: number
      type: object
    EdgeNodeDetailResponse:
      additionalProperties: false
      properties:
        groups:
          items:
            $ref: '#/components/schemas/NodeGroup'
          type: array
        has_services:
          type: boolean
        hash_id:
          type: string
        id:
          format: int64
          type: integer
        modules:
          $ref: '#/components/schemas/EdgeNodeModules'
        name:
          type: string
      required:
      - id
      - hash_id
      - name
      - groups
      - modules
      - has_services
      type: object
    EdgeNodeModules:
      additionalProperties: false
      properties:
        add_services:
          type: boolean
      required:
      - add_services
      type: object
    EdgeNodeResponse:
      additionalProperties: false
      properties:
        groups:
          items:
            $ref: '#/components/schemas/NodeGroup'
          type: array
        hash_id:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        status:
          type: string
      required:
      - id
      type: object
    EdgeNodeResponseWithTotal:
      additionalProperties: false
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/EdgeNodeResponse'
          type: array
        total:
          format: int64
          type: integer
      required:
      - nodes
      - total
      type: object
    ErrorModel:
      properties:
        code:
          type: string
      type: object
    ErrorResponse:
      properties:
        detail:
          type: string
      type: object
    ErrorsResponse:
      properties:
        errors:
          items:
            type: string
          type: array
      type: object
    GetApplicationResponse:
      additionalProperties: false
      example:
        results:
          active: true
          application_acceleration: true
          caching: true
          debug_rules: true
          delivery_protocol: delivery_protocol
          device_detection: true
          edge_firewall: true
          edge_functions: true
          http3: true
          http_port:
          - 5
          https_port:
          - 2
          id: 5
          image_optimization: true
          l2_caching: true
          load_balancer: true
          minimum_tls_version: minimum_tls_version
          name: name
          next: next
          raw_logs: true
          supported_ciphers: supported_ciphers
          web_application_firewall: true
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/ApplicationResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    GetApplicationsResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - active: true
          debug_rules: true
          id: 5
          last_editor: last_editor
          last_modified: last_editor
          name: name
          next: next
          origins:
          - name: Default Origin
            origin_id: a7210940-b3fa-4d98-a5aa-ecadb4f48f57
            origin_type: single_origin
        - active: true
          debug_rules: true
          id: 5
          last_editor: last_editor
          last_modified: last_editor
          name: name
          next: next
          origins:
          - name: Default Origin
            origin_id: a7210940-b3fa-4d98-a5aa-ecadb4f48f57
            origin_type: single_origin
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
        results:
          items:
            $ref: '#/components/schemas/ApplicationsResults'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    GetOrPatchDnsSecResponse:
      description: Object returned by get zone DNSSEC
      example:
        results:
          delegation_signer:
            algorithm_type:
              id: 6
              slug: slug
            digest: digest
            digest_type:
              id: 6
              slug: slug
            key_tag: 9607
          is_enabled: true
          status: unconfigured
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/DnsSec'
        schema_version:
          description: The schema version
          type: integer
      type: object
    GetRecordsResponse:
      description: Object returned by get zone record
      example:
        count: 6
        links:
          next: next
          previous: previous
        results:
          records:
          - answers_list:
            - answers_list
            - answers_list
            description: description
            entry: entry
            policy: policy
            record_id: 5
            record_type: record_type
            ttl: 7
            weight: 2
          - answers_list:
            - answers_list
            - answers_list
            description: description
            entry: entry
            policy: policy
            record_id: 5
            record_type: record_type
            ttl: 7
            weight: 2
          zone_domain: zone_domain
          zone_id: 5
        schema_version: 0
        total_pages: 1
      properties:
        count:
          description: Number of records
          type: integer
        links:
          $ref: '#/components/schemas/GetZonesResponse_links'
        results:
          $ref: '#/components/schemas/GetRecordsResponse_results'
        schema_version:
          description: The schema version
          type: integer
        total_pages:
          description: The total pages
          type: integer
      type: object
    GetRecordsResponse_results:
      example:
        records:
        - answers_list:
          - answers_list
          - answers_list
          description: description
          entry: entry
          policy: policy
          record_id: 5
          record_type: record_type
          ttl: 7
          weight: 2
        - answers_list:
          - answers_list
          - answers_list
          description: description
          entry: entry
          policy: policy
          record_id: 5
          record_type: record_type
          ttl: 7
          weight: 2
        zone_domain: zone_domain
        zone_id: 5
      properties:
        records:
          description: Zone records collection
          items:
            $ref: '#/components/schemas/RecordGet'
          type: array
        zone_domain:
          type: string
        zone_id:
          type: integer
      type: object
    GetZoneResponse:
      description: Object returned by get zone
      example:
        results:
          domain: domain
          expiry: 3
          id: 5
          is_active: true
          name: name
          nameservers:
          - nameservers
          - nameservers
          nx_ttl: 2
          refresh: 9
          retry: 5
          soa_ttl: 7
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/Zone'
        schema_version:
          description: The schema version
          type: integer
      type: object
    GetZonesResponse:
      description: Object returned by get zones
      example:
        count: 6
        links:
          next: next
          previous: previous
        results:
        - domain: domain
          expiry: 3
          id: 5
          is_active: true
          name: name
          nameservers:
          - nameservers
          - nameservers
          nx_ttl: 2
          refresh: 9
          retry: 5
          soa_ttl: 7
        - domain: domain
          expiry: 3
          id: 5
          is_active: true
          name: name
          nameservers:
          - nameservers
          - nameservers
          nx_ttl: 2
          refresh: 9
          retry: 5
          soa_ttl: 7
        schema_version: 0
        total_pages: 1
      properties:
        count:
          description: Number of records
          type: integer
        links:
          $ref: '#/components/schemas/GetZonesResponse_links'
        results:
          description: Hosted zones collection
          items:
            $ref: '#/components/schemas/Zone'
          type: array
        schema_version:
          description: The schema version
          type: integer
        total_pages:
          description: The total pages
          type: integer
      type: object
    GetZonesResponse_links:
      example:
        next: next
        previous: previous
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
      type: object
    Links:
      example:
        next: next
        previous: previous
      properties:
        next:
          type: string
        previous:
          type: string
      type: object
    ListEdgeFirewallResponse:
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - debug_rules: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          is_active: true
          last_editor: last_editor
          last_modified: last_modified
          name: name
          network_protection_enabled: true
          waf_enabled: true
        - debug_rules: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          is_active: true
          last_editor: last_editor
          last_modified: last_modified
          name: name
          network_protection_enabled: true
          waf_enabled: true
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/Links'
        results:
          items:
            $ref: '#/components/schemas/EdgeFirewall'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      type: object
    ListEdgeFunctionResponse:
      example:
        count: 1
        links:
          next: next
          previous: previous
        results:
        - active: true
          code: code
          function_to_run: function_to_run
          id: 5
          initiator_type: initiator_type
          json_args: '{}'
          language: language
          last_editor: last_editor
          modified: modified
          name: name
          reference_count: 5
        - active: true
          code: code
          function_to_run: function_to_run
          id: 5
          initiator_type: initiator_type
          json_args: '{}'
          language: language
          last_editor: last_editor
          modified: modified
          name: name
          reference_count: 5
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/Links'
        results:
          items:
            $ref: '#/components/schemas/Results'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      type: object
    ListEdgeFunctionsInstancesResponse:
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - edge_function: 3254
          id: 1614
          json_args: {}
          name: asdasdsad
        - edge_function: 3254
          id: 1614
          json_args: {}
          name: asdasdsad
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/Links'
        results:
          items:
            $ref: '#/components/schemas/EdgeFunctionsInstance'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      type: object
    ListNetworkListsResponse:
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/Links'
        results:
          items:
            $ref: '#/components/schemas/NetworkLists'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      type: object
    NetworkLists:
      properties:
        id:
          example: 1614
          type: integer
        items_values:
          example:
          - 192.168.0.1
          items:
            type: string
          type: array
        list_type:
          example: ip_cidr
          type: string
        name:
          example: Network List created using the API
          type: string
      type: object
    NetworkListsResponse:
      properties:
        results:
          $ref: '#/components/schemas/NetworkLists'
        schema_version:
          type: number
      type: object
    NodeGroup:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    NodeGroupResponse:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    OriginsIdResponse:
      additionalProperties: false
      example:
        results:
          addresses:
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          connection_timeout: 5
          hmac_access_key: hmac_access_key
          hmac_authentication: true
          hmac_region_name: hmac_region_name
          hmac_secret_key: hmac_secret_key
          host_header: host_header
          is_origin_redirection_enabled: true
          method: method
          name: name
          origin_id: 5
          origin_key: origin_key
          origin_path: origin_path
          origin_protocol_policy: origin_protocol_policy
          origin_type: origin_type
          timeout_between_bytes: 2
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/OriginsResultResponse'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    OriginsResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - addresses:
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          connection_timeout: 5
          hmac_access_key: hmac_access_key
          hmac_authentication: true
          hmac_region_name: hmac_region_name
          hmac_secret_key: hmac_secret_key
          host_header: host_header
          is_origin_redirection_enabled: true
          method: method
          name: name
          origin_id: 5
          origin_key: origin_key
          origin_path: origin_path
          origin_protocol_policy: origin_protocol_policy
          origin_type: origin_type
          timeout_between_bytes: 2
        - addresses:
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          - address: address
            is_active: true
            server_role: server_role
            weight: weight
          connection_timeout: 5
          hmac_access_key: hmac_access_key
          hmac_authentication: true
          hmac_region_name: hmac_region_name
          hmac_secret_key: hmac_secret_key
          host_header: host_header
          is_origin_redirection_enabled: true
          method: method
          name: name
          origin_id: 5
          origin_key: origin_key
          origin_path: origin_path
          origin_protocol_policy: origin_protocol_policy
          origin_type: origin_type
          timeout_between_bytes: 2
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/OriginsResponse_links'
        results:
          items:
            $ref: '#/components/schemas/OriginsResultResponse'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    OriginsResponse_links:
      example:
        next: next
        previous: previous
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
      type: object
    OriginsResultResponse:
      additionalProperties: false
      example:
        addresses:
        - address: address
          is_active: true
          server_role: server_role
          weight: weight
        - address: address
          is_active: true
          server_role: server_role
          weight: weight
        connection_timeout: 5
        hmac_access_key: hmac_access_key
        hmac_authentication: true
        hmac_region_name: hmac_region_name
        hmac_secret_key: hmac_secret_key
        host_header: host_header
        is_origin_redirection_enabled: true
        method: method
        name: name
        origin_id: 5
        origin_key: origin_key
        origin_path: origin_path
        origin_protocol_policy: origin_protocol_policy
        origin_type: origin_type
        timeout_between_bytes: 2
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/OriginsResultResponse_addresses'
          type: array
        connection_timeout:
          format: int64
          type: integer
        hmac_access_key:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_secret_key:
          type: string
        host_header:
          type: string
        is_origin_redirection_enabled:
          type: boolean
        method:
          type: string
        name:
          type: string
        origin_id:
          format: int64
          type: integer
        origin_key:
          type: string
        origin_path:
          type: string
        origin_protocol_policy:
          type: string
        origin_type:
          type: string
        timeout_between_bytes:
          format: int64
          type: integer
      required:
      - addresses
      - connection_timeout
      - hmac_access_key
      - hmac_authentication
      - hmac_region_name
      - hmac_secret_key
      - host_header
      - is_origin_redirection_enabled
      - method
      - name
      - origin_id
      - origin_key
      - origin_path
      - origin_protocol_policy
      - origin_type
      - timeout_between_bytes
      type: object
    OriginsResultResponse_addresses:
      example:
        address: address
        is_active: true
        server_role: server_role
        weight: weight
      properties:
        address:
          type: string
        is_active:
          type: boolean
        server_role:
          type: string
        weight:
          nullable: true
          type: string
      required:
      - address
      - is_active
      - server_role
      - weight
      type: object
    PatchDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          type: string
        user_agent:
          type: string
      type: object
    PatchEdgeFunctionRequest:
      example:
        active: true
        code: code
        json_args: ''
        name: name
      properties:
        active:
          type: boolean
        code:
          type: string
        is_proprietary_code:
          type: boolean
        json_args: {}
        name:
          type: string
      type: object
    PatchOriginsRequest:
      additionalProperties: false
      example:
        addresses:
        - address: address
        - address: address
        hmac_access_key: hmac_access_key
        hmac_authentication: true
        hmac_region_name: hmac_region_name
        hmac_secret_key: hmac_secret_key
        host_header: host_header
        name: name
        origin_path: origin_path
        origin_protocol_policy: origin_protocol_policy
        origin_type: origin_type
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/CreateOriginsRequest_addresses'
          type: array
        hmac_access_key:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_secret_key:
          type: string
        host_header:
          type: string
        name:
          type: string
        origin_path:
          type: string
        origin_protocol_policy:
          type: string
        origin_type:
          type: string
      type: object
    PatchRulesEngineRequest:
      additionalProperties: false
      example:
        behaviors:
        - name: name
          target: ''
        - name: name
          target: ''
        criteria:
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        name: name
      properties:
        behaviors:
          items:
            $ref: '#/components/schemas/RulesEngineBehavior'
          type: array
        criteria:
          items:
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
            type: array
          type: array
        name:
          type: string
      type: object
    PostOrPutRecordResponse:
      description: Object returned by create or update zone record
      example:
        results:
          answers_list:
          - answers_list
          - answers_list
          description: description
          entry: entry
          id: 6
          policy: policy
          record_type: record_type
          ttl: 5
          weight: 1
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/RecordPostOrPut'
        schema_version:
          description: The schema version
          type: integer
      type: object
    PostOrPutZoneResponse:
      description: Object returned by create or update zone
      example:
        results:
        - domain: domain
          expiry: 3
          id: 5
          is_active: true
          name: name
          nameservers:
          - nameservers
          - nameservers
          nx_ttl: 2
          refresh: 9
          retry: 5
          soa_ttl: 7
        - domain: domain
          expiry: 3
          id: 5
          is_active: true
          name: name
          nameservers:
          - nameservers
          - nameservers
          nx_ttl: 2
          refresh: 9
          retry: 5
          soa_ttl: 7
        schema_version: 0
      properties:
        results:
          description: The created hosted zone
          items:
            $ref: '#/components/schemas/Zone'
          type: array
        schema_version:
          description: The schema version
          type: integer
      type: object
    PurgeCacheKeyRequest:
      additionalProperties: false
      example:
        layer: l2_caching
        method: delete
        urls:
        - http://www.domain.com/@@cookie_name=cookie_value
        - http://www.domain.com/test.js
        - http://static.domain.com/image1.jpg?ims=arguments@@variants
      properties:
        layer:
          type: string
        method:
          type: string
        urls:
          items:
            type: string
          type: array
      required:
      - layer
      - method
      - urls
      type: object
    PurgeUrlRequest:
      additionalProperties: false
      example:
        method: delete
        urls:
        - http://www.domain.com/
        - http://www.domain.com/test.js
        - http://static.mistaken-domain.com/image1.jpg
      properties:
        method:
          type: string
        urls:
          items:
            type: string
          type: array
      required:
      - method
      - urls
      type: object
    PurgeWildcardRequest:
      additionalProperties: false
      example:
        method: delete
        urls:
        - http://www.domain.com/path/image.jpg*
      properties:
        method:
          type: string
        urls:
          items:
            type: string
          type: array
      required:
      - method
      - urls
      type: object
    PutDomainRequest:
      additionalProperties: false
      properties:
        cname_access_only:
          type: boolean
        cnames:
          items:
            type: string
          type: array
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
        edge_application_id:
          format: int64
          type: integer
        is_active:
          type: boolean
        name:
          type: string
      required:
      - name
      - edge_application_id
      - cname_access_only
      - cnames
      - is_active
      - digital_certificate_id
      type: object
    PutEdgeFunctionRequest:
      example:
        active: true
        code: code
        initiator_type: initiator_type
        json_args: ''
        language: language
        name: name
      properties:
        active:
          type: boolean
        code:
          type: string
        initiator_type:
          type: string
        is_proprietary_code:
          type: boolean
        json_args: {}
        language:
          type: string
        name:
          type: string
      type: object
    RecordGet:
      example:
        answers_list:
        - answers_list
        - answers_list
        description: description
        entry: entry
        policy: policy
        record_id: 5
        record_type: record_type
        ttl: 7
        weight: 2
      properties:
        answers_list:
          items:
            type: string
          type: array
        description:
          type: string
        entry:
          type: string
        policy:
          type: string
        record_id:
          type: integer
        record_type:
          type: string
        ttl:
          type: integer
        weight:
          type: integer
      type: object
    RecordPostOrPut:
      example:
        answers_list:
        - answers_list
        - answers_list
        description: description
        entry: entry
        id: 6
        policy: policy
        record_type: record_type
        ttl: 5
        weight: 1
      properties:
        answers_list:
          items:
            type: string
          type: array
        description:
          type: string
        entry:
          type: string
        id:
          type: integer
        policy:
          type: string
        record_type:
          type: string
        ttl:
          type: integer
        weight:
          type: integer
      type: object
    ResourceDetail:
      additionalProperties: false
      example:
        content: content
        content_type: content_type
        id: 0
        name: name
        type: type
      properties:
        content:
          type: string
        content_type:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        trigger:
          type: string
      required:
      - content
      - content_type
      - id
      - name
      - trigger
      type: object
    ResourceResponse:
      additionalProperties: false
      example:
        content_type: content_type
        id: 0
        last_editor: last_editor
        name: name
        trigger: reload
        updated_at: updated_at
      properties:
        content_type:
          type: string
        id:
          format: int64
          type: integer
        last_editor:
          type: string
        name:
          type: string
        trigger:
          type: string
        updated_at:
          type: string
      required:
      - content_type
      - id
      - last_editor
      - name
      - trigger
      - updated_at
      type: object
    ResourceResponseWithTotal:
      additionalProperties: false
      example:
        resources:
        - content_type: content_type
          id: 0
          last_editor: last_editor
          name: name
          type: type
          updated_at: updated_at
        - content_type: content_type
          id: 0
          last_editor: last_editor
          name: name
          type: type
          updated_at: updated_at
        total: 6
      properties:
        resources:
          items:
            $ref: '#/components/schemas/ResourceResponse'
          type: array
        total:
          format: int64
          type: integer
      required:
      - resources
      - total
      type: object
    Response:
      additionalProperties: false
      properties:
        description:
          type: string
        id:
          format: int64
          type: integer
        last_editor:
          type: string
        last_modified:
          format: date-time
          type: string
        name:
          type: string
        status:
          type: boolean
        token:
          type: string
      required:
      - id
      - name
      - token
      - status
      - description
      - last_editor
      - last_modified
      type: object
    ResponseWithTotal:
      additionalProperties: false
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/Response'
          type: array
        total:
          format: int64
          type: integer
      required:
      - credentials
      - total
      type: object
    Results:
      example:
        active: true
        code: function foo() { console.log('hello world');
        function_to_run: function_to_run
        id: 5
        initiator_type: edge_application
        json_args: '{"a": 1, "b": 2}'
        language: javascript
        last_editor: user@azion.com
        modified: modified
        name: MyFunction
        reference_count: 5
      properties:
        active:
          type: boolean
        code:
          type: string
        function_to_run:
          type: string
        id:
          format: int64
          type: integer
        initiator_type:
          type: string
        is_proprietary_code:
          type: boolean
        json_args: {}
        language:
          type: string
        last_editor:
          type: string
        modified:
          type: string
        name:
          type: string
        reference_count:
          format: int64
          type: integer
      type: object
    RulesEngineBehavior:
      additionalProperties: false
      example:
        name: name
        target: ''
      properties:
        name:
          type: string
        target: {}
      required:
      - name
      type: object
    RulesEngineCriteria:
      additionalProperties: false
      example:
        conditional: conditional
        input_value: input_value
        operator: operator
        variable: variable
      properties:
        conditional:
          type: string
        input_value:
          type: string
        operator:
          type: string
        variable:
          type: string
      required:
      - conditional
      - operator
      - variable
      type: object
    RulesEngineIdResponse:
      additionalProperties: false
      example:
        results:
          behaviors:
          - name: name
            target: ''
          - name: name
            target: ''
          criteria:
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          id: 5
          is_active: true
          name: name
          order: 5
          phase: phase
        schema_version: 0
      properties:
        results:
          $ref: '#/components/schemas/RulesEngineResultResponse'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
      type: object
    RulesEngineResponse:
      additionalProperties: false
      example:
        count: 0
        links:
          next: next
          previous: previous
        results:
        - behaviors:
          - name: name
            target: ''
          - name: name
            target: ''
          criteria:
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          id: 5
          is_active: true
          name: name
          order: 5
          phase: phase
        - behaviors:
          - name: name
            target: ''
          - name: name
            target: ''
          criteria:
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          - - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
            - conditional: conditional
              input_value: input_value
              operator: operator
              variable: variable
          id: 5
          is_active: true
          name: name
          order: 5
          phase: phase
        schema_version: 1
        total_pages: 6
      properties:
        count:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/OriginsResponse_links'
        results:
          items:
            $ref: '#/components/schemas/RulesEngineResultResponse'
          type: array
        schema_version:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
      required:
      - count
      - links
      - results
      - schema_version
      - total_pages
      type: object
    RulesEngineResultResponse:
      example:
        behaviors:
        - name: name
          target: ''
        - name: name
          target: ''
        criteria:
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        id: 5
        is_active: true
        name: name
        order: 5
        phase: phase
      properties:
        behaviors:
          items:
            $ref: '#/components/schemas/RulesEngineResultResponse_behaviors'
          type: array
        criteria:
          items:
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
            type: array
          type: array
        id:
          format: int64
          type: integer
        is_active:
          type: boolean
        name:
          type: string
        order:
          format: int64
          type: integer
        phase:
          type: string
      required:
      - behavior
      - criteria
      - id
      - is_active
      - name
      - order
      - phase
      type: object
    RulesEngineResultResponse_behaviors:
      example:
        name: name
        target: ''
      properties:
        name:
          type: string
        target: {}
      required:
      - name
      type: object
    ServiceBindDetailResponse:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        service_id:
          format: int64
          type: integer
        service_name:
          type: string
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      required:
      - id
      - service_name
      - service_id
      - variables
      type: object
    ServiceBindRequest:
      additionalProperties: false
      properties:
        service_id:
          format: int64
          type: integer
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      required:
      - service_id
      - variables
      type: object
    ServiceResponse:
      additionalProperties: false
      example:
        active: true
        bound_nodes: 0
        id: 6
        last_editor: last_editor
        name: name
        permissions:
        - permissions
        - permissions
        updated_at: updated_at
        variables:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        active:
          type: boolean
        bind_id:
          format: int64
          type: integer
        bound_nodes:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        is_bound:
          format: int64
          type: integer
        last_editor:
          type: string
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
        service_id:
          format: int64
          type: integer
        updated_at:
          format: date-time
          type: string
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      required:
      - service_id
      - name
      - is_bound
      - bind_id
      - updated_at
      - last_editor
      type: object
    ServiceResponseWithTotal:
      additionalProperties: false
      properties:
        services:
          items:
            $ref: '#/components/schemas/ServiceResponse'
          type: array
        total:
          format: int64
          type: integer
      required:
      - services
      - total
      type: object
    ServiceResponseWithTotals:
      additionalProperties: false
      example:
        services:
        - active: true
          bound_nodes: 0
          id: 6
          last_editor: last_editor
          name: name
          permissions:
          - permissions
          - permissions
          updated_at: updated_at
          variables:
          - name: name
            value: value
          - name: name
            value: value
        - active: true
          bound_nodes: 0
          id: 6
          last_editor: last_editor
          name: name
          permissions:
          - permissions
          - permissions
          updated_at: updated_at
          variables:
          - name: name
            value: value
          - name: name
            value: value
        total: 1
      properties:
        services:
          items:
            $ref: '#/components/schemas/ServiceResponse'
          type: array
        total:
          format: int64
          type: integer
      required:
      - services
      - total
      type: object
    UnauthorizedEdgeNodeInfo:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        reason:
          type: string
      required:
      - id
      - reason
      type: object
    UpdateCredentialRequest:
      additionalProperties: false
      properties:
        description:
          type: string
        name:
          type: string
        status:
          type: boolean
      required:
      - name
      - description
      - status
      type: object
    UpdateDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          type: string
        user_agent:
          type: string
      type: object
    UpdateDomainRequest:
      additionalProperties: false
      properties:
        cname_access_only:
          type: boolean
        cnames:
          items:
            type: string
          type: array
        digital_certificate_id:
          format: int64
          nullable: true
          type: integer
        edge_application_id:
          format: int64
          type: integer
        is_active:
          type: boolean
        name:
          type: string
      type: object
    UpdateEdgeFirewallRequest:
      $ref: '#/components/schemas/ListEdgeFirewallResponse'
    UpdateEdgeFunctionsInstanceRequest:
      $ref: '#/components/schemas/CreateEdgeFunctionsInstancesRequest'
    UpdateEdgeNodeResponse:
      additionalProperties: false
      properties:
        groups:
          items:
            $ref: '#/components/schemas/NodeGroup'
          type: array
        id:
          format: int64
          type: integer
        name:
          type: string
        status:
          type: string
      required:
      - id
      - name
      - groups
      - status
      type: object
    UpdateNetworkListsRequest:
      properties:
        items_values:
          example:
          - 192.168.0.1
          items:
            type: string
          type: array
        list_type:
          example: ip_cidr
          type: string
        name:
          example: Network List created using the API
          type: string
      type: object
    UpdateOriginsRequest:
      additionalProperties: false
      example:
        addresses:
        - address: address
        - address: address
        hmac_access_key: hmac_access_key
        hmac_authentication: true
        hmac_region_name: hmac_region_name
        hmac_secret_key: hmac_secret_key
        host_header: host_header
        name: name
        origin_path: origin_path
        origin_protocol_policy: origin_protocol_policy
        origin_type: origin_type
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/CreateOriginsRequest_addresses'
          type: array
        hmac_access_key:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_secret_key:
          type: string
        host_header:
          type: string
        name:
          type: string
        origin_path:
          type: string
        origin_protocol_policy:
          type: string
        origin_type:
          type: string
      required:
      - addresses
      - host_header
      - name
      type: object
    UpdateResourceRequest:
      additionalProperties: false
      example:
        content: content
        content_type: content_type
        name: name
        trigger: trigger
      properties:
        content:
          type: string
        content_type:
          type: string
        name:
          type: string
        trigger:
          type: string
      type: object
    UpdateRulesEngineRequest:
      additionalProperties: false
      example:
        behaviors:
        - name: name
          target: ''
        - name: name
          target: ''
        criteria:
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        - - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
          - conditional: conditional
            input_value: input_value
            operator: operator
            variable: variable
        name: name
      properties:
        behaviors:
          items:
            $ref: '#/components/schemas/RulesEngineBehavior'
          type: array
        criteria:
          items:
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
            type: array
          type: array
        name:
          type: string
      required:
      - behaviors
      - criteria
      - name
      type: object
    UpdateServiceBindRequest:
      additionalProperties: false
      properties:
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      required:
      - variables
      type: object
    UpdateServiceRequest:
      additionalProperties: false
      example:
        active: true
        name: name
        variables:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        active:
          type: boolean
        name:
          type: string
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      type: object
    Variable:
      additionalProperties: false
      example:
        name: name
        value: value
      properties:
        created_at:
          format: date-time
          type: string
        key:
          maxLength: 100
          minLength: 1
          type: string
        last_editor:
          readOnly: true
          type: string
        name:
          type: string
        secret:
          readOnly: true
          type: boolean
        updated_at:
          format: date-time
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
        value:
          maxLength: 32768
          minLength: 1
          type: string
      required:
      - created_at
      - key
      - last_editor
      - secret
      - updated_at
      - uuid
      - value
      type: object
    VariableCreate:
      properties:
        key:
          maxLength: 100
          minLength: 1
          type: string
        secret:
          type: boolean
        value:
          maxLength: 32768
          minLength: 1
          type: string
      required:
      - key
      - value
      type: object
    VariableGet:
      properties:
        created_at:
          format: date-time
          type: string
        key:
          maxLength: 100
          minLength: 1
          type: string
        last_editor:
          readOnly: true
          type: string
        secret:
          readOnly: true
          type: boolean
        updated_at:
          format: date-time
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
        value:
          description: 'Given the *incoming* primitive data, return the value for
            this field

            that should be validated and transformed to a native value.'
          maxLength: 32768
          minLength: 1
          readOnly: true
          type: string
      required:
      - created_at
      - key
      - last_editor
      - secret
      - updated_at
      - uuid
      - value
      type: object
    WAFDomains200:
      properties:
        results:
          items:
            example:
              cnames:
              - www.example2.io
              - www.example.com
              domain: 28852f.ha.azioncdn.net
              id: 28852
              name: Domain Name
            properties: {}
            type: object
          type: array
        schema_version:
          example: 3
          type: integer
      type: object
    WAFEvents200:
      properties:
        results:
          items:
            example:
              hit_count: 9290
              ip_count: 217
              match_zone: cookies
              matches_on: value
              path_count: 798
              rule_description: 'Possible SQL Injection attack: MySQL keyword (|)
                found in Cookies'
              rule_id: 1005
            properties: {}
            type: object
          type: array
        schema_version:
          example: 3
          type: integer
      type: object
    WAFEvents400:
      properties:
        errors:
          items:
            example:
              error: bad_request
              message: Bad Request
            properties: {}
            type: object
          type: array
        schema_version:
          example: 3
          type: integer
      type: object
    WAFEvents401:
      properties:
        detail:
          example: Authentication credentials were not provided.
          type: string
      type: object
    WAFEvents404:
      properties:
        errors:
          items:
            example:
              error: not_found
              message: Network List not found
            properties: {}
            type: object
          type: array
        schema_version:
          example: 3
          type: integer
      type: object
    Zone:
      example:
        domain: domain
        expiry: 3
        id: 5
        is_active: true
        name: name
        nameservers:
        - nameservers
        - nameservers
        nx_ttl: 2
        refresh: 9
        retry: 5
        soa_ttl: 7
      properties:
        domain:
          description: Hosted zone domain
          type: string
        expiry:
          nullable: true
          type: integer
        id:
          description: Hosted zone id
          type: integer
        is_active:
          description: If hosted zone is active
          type: boolean
        name:
          description: Hosted zone name
          type: string
        nameservers:
          description: List of nameservers
          items:
            type: string
          nullable: true
          type: array
        nx_ttl:
          nullable: true
          type: integer
        refresh:
          nullable: true
          type: integer
        retry:
          nullable: true
          type: integer
        soa_ttl:
          nullable: true
          type: integer
      type: object
  securitySchemes:
    JWT:
      description: 'You must inform a token to auth.

        Usage format: `Token <TOKEN>`

        '
      in: header
      name: Authorization
      type: apiKey
    authToken:
      description: 'Prefix the value with "Token ". The final header is: Authorization:
        Token my-token-value'
      in: header
      name: Authorization
      type: apiKey
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
info:
  description: Azion Real-Time Purge
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
  title: Purge API
  version: 1.0.0
openapi: 3.0.0
paths:
  /api/variables:
    get:
      description: List all user's Variables.
      operationId: api_variables_list
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Variable'
                type: array
          description: ''
      security:
      - tokenAuth: []
      tags:
      - Variables
    post:
      description: Create a new Variable. <br><ul><li>If the attribute "secret" is
        informed with value "true" in request payload the Variable value will be secret
        and no longer viewable after creation.</li><li>If the attribute "secret" is
        not informed the Variable value will be considered as not secret by default.</li></ul>
      operationId: api_variables_create
      requestBody:
        content:
          application/json:
            examples:
              SecretVariableCreation:
                summary: Secret Variable creation
                value:
                  key: MY_SECRET_VAR
                  secret: true
                  value: My secret value
              SimpleVariableCreation:
                summary: Simple Variable creation
                value:
                  key: MY_SIMPLE_VAR
                  value: My not secret value
            schema:
              $ref: '#/components/schemas/VariableCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableGet'
          description: ''
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
      - tokenAuth: []
      tags:
      - Variables
  /api/variables/{uuid}:
    delete:
      description: Delete a Variable by it's UUID
      operationId: api_variables_destroy
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
      responses:
        '204':
          description: No response body
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
      - tokenAuth: []
      tags:
      - Variables
    get:
      description: Retrieve all data for a Variable by it's UUID
      operationId: api_variables_retrieve
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: ''
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
      - tokenAuth: []
      tags:
      - Variables
    put:
      description: Update variable attributes by it's UUID. Keep the Variable UUID
        but overwrite all editable attributes.
      operationId: api_variables_update
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
      requestBody:
        content:
          application/json:
            examples:
              SecretVariableUpdate:
                summary: Secret Variable update
                value:
                  key: MY_NEW_SECRET_VAR_KEY
                  secret: true
                  value: My new secret value
              SimpleVariableUpdate:
                summary: Simple Variable update
                value:
                  key: MY_NEW_SIMPLE_VAR_KEY
                  value: My new not secret value
            schema:
              $ref: '#/components/schemas/VariableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariableCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableGet'
          description: ''
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
      - tokenAuth: []
      tags:
      - Variables
  /credentials:
    get:
      operationId: findAll
      parameters:
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: page
        schema:
          format: int64
          type: integer
      - in: query
        name: page_size
        schema:
          format: int64
          type: integer
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: order_by
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ResponseWithTotal'
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Return all credentials
    post:
      operationId: createCredential
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateCredentialRequest'
        required: true
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Created
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Create credential
  /credentials/{credentialId}:
    delete:
      operationId: deleteCredential
      parameters:
      - in: path
        name: credentialId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Delete the Credential
    get:
      operationId: loadCredential
      parameters:
      - in: path
        name: credentialId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Load the Credential
    patch:
      operationId: updateCredential
      parameters:
      - in: path
        name: credentialId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateCredentialRequest'
        required: true
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Update the Credential
  /domains:
    get:
      description: It returns the list of domains of an account.
      operationId: getDomains
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResults'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains
      tags:
      - Domains
    post:
      description: It enables you to include a new domain into an account.
      operationId: createDomain
      parameters:
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      - example: application/json
        in: header
        name: Content-Type
        schema:
          type: string
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
              example:
                cname_access_only: false
                cnames: []
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
                name: My Domain
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains
      tags:
      - Domains
  /domains/{id}:
    delete:
      description: It enables you to delete a domain.
      operationId: delDomain
      parameters:
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      - description: "The id of the domain to be deleted.\t"
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains/:id
      tags:
      - Domains
    get:
      description: It returns details of a domain.
      operationId: getDomain
      parameters:
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      - description: "The id of the domain to be consulted.\t"
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains/:id
      tags:
      - Domains
    patch:
      description: It updates one or more fields in a Domain, preserving the value
        of the fields not informed.
      operationId: updateDomain
      parameters:
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      - example: application/json
        in: header
        name: Content-Type
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
              example:
                cname_access_only: false
                cnames: []
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
                name: Validation Fafinha
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains/:id
      tags:
      - Domains
    put:
      description: 'It overwrites all fields of a domain, while preserving the id.
        Optional fields not filled in will be replaced by the default values.


        To update only some fields in a domain, consider using the PATCH method instead
        of PUT.'
      operationId: putDomain
      parameters:
      - example: application/json; version=3
        in: header
        name: Accept
        schema:
          type: string
      - example: application/json
        in: header
        name: Content-Type
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PutDomainRequest'
              example:
                cname_access_only: false
                cnames: []
                digital_certificate_id: null
                edge_application_id: 1580476573
                is_active: true
                name: My Domain
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DomainResponseWithResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /domains:/:id
      tags:
      - Domains
  /edge_applications:
    get:
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetApplicationsResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications
      tags:
      - Edge Applications > Main Settings
    post:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/CreateApplicationResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications
      tags:
      - Edge Applications > Main Settings
  /edge_applications/{edge_application_id}/cache_settings:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationCacheGetResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/cache_settings
      tags:
      - Edge Applications > Cache Settings
    post:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCacheCreateRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationCacheCreateResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:edge_application_id:/cache_settings
      tags:
      - Edge Applications > Cache Settings
  /edge_applications/{edge_application_id}/cache_settings/{cache_settings_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: cache_settings_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationCacheGetOneResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/cache_settings/:cache_settings_id:'
      tags:
      - Edge Applications > Cache Settings
    put:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: cache_settings_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCachePutRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationCachePutResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:edge_application_id:/cache_settings/ca
      tags:
      - Edge Applications > Cache Settings
  /edge_applications/{edge_application_id}/cache_settings/{cache_settings}:
    delete:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: cache_settings
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/cache_settings/:cache_settings:'
      tags:
      - Edge Applications > Cache Settings
    patch:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: cache_settings
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCachePatchRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationCachePatchResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/cache_settings/:cache_settings_id:'
      tags:
      - Edge Applications > Cache Settings
  /edge_applications/{edge_application_id}/device_groups:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DeviceGroupsResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups
      tags:
      - Edge Applications > Device Groups
    post:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateDeviceGroupsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DeviceGroupsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups
      tags:
      - Edge Applications > Device Groups
  /edge_applications/{edge_application_id}/device_groups/{device_group_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: device_group_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The id of the Device Groups that you plan to delete.
        example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups/{device_group_id}
      tags:
      - Edge Applications > Device Groups
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: device_group_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The id of the Device Groups that you plan to query.
        example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DeviceGroupsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups/{device_group_id}
      tags:
      - Edge Applications > Device Groups
    patch:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: device_group_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PatchDeviceGroupsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DeviceGroupsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups/{device_group_id}
      tags:
      - Edge Applications > Device Groups
    put:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: device_group_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateDeviceGroupsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/DeviceGroupsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/device_groups/{device_group_id}
      tags:
      - Edge Applications > Device Groups
  /edge_applications/{edge_application_id}/functions_instances:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationInstancesGetResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:edge_application_id:/functions_instances
      tags:
      - Edge Applications > Edge Functions Instances
    post:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCreateInstanceRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationInstanceResults'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: edge_application/:edge_application_id:/functions_instances
      tags:
      - Edge Applications > Edge Functions Instances
  /edge_applications/{edge_application_id}/functions_instances/{functions_instances_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: functions_instances_id
        required: true
        schema:
          type: string
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:'
      tags:
      - Edge Applications > Edge Functions Instances
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: functions_instances_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The id of the edge function instance you plan to query.\t"
        example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationInstancesGetOneResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:'
      tags:
      - Edge Applications > Edge Functions Instances
    patch:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: "The id of the edge application you plan to overwrite\t"
        explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the edge function instance you plan to overwrite.
        explode: false
        in: path
        name: functions_instances_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateInstanceRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationInstanceResults'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:'
      tags:
      - Edge Applications > Edge Functions Instances
    put:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: "The id of the edge application you plan to overwrite\t"
        explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the edge function instance you plan to overwrite.
        explode: false
        in: path
        name: functions_instances_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationPutInstanceRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationInstanceResults'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:'
      tags:
      - Edge Applications > Edge Functions Instances
  /edge_applications/{edge_application_id}/origins:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/OriginsResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/origins
      tags:
      - Edge Applications > Origins
    post:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateOriginsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/OriginsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/origins
      tags:
      - Edge Applications > Origins
  /edge_applications/{edge_application_id}/origins/{origin_key}:
    delete:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: origin_key
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the Origin that you plan to delete.
        example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/origins/{origin_id}
      tags:
      - Edge Applications > Origins
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: origin_key
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the Origin that you plan to query.
        example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/OriginsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/origins/{origin_key}
      tags:
      - Edge Applications > Origins
    patch:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: origin_key
        required: true
        schema:
          type: string
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PatchOriginsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/OriginsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/origins/:origin_id:'
      tags:
      - Edge Applications > Origins
    put:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: origin_key
        required: true
        schema:
          type: string
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateOriginsRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/OriginsIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/origins/{origin_id}
      tags:
      - Edge Applications > Origins
  /edge_applications/{edge_application_id}/rules_engine/{phase}/rules:
    get:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RulesEngineResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      tags:
      - Edge Applications > Rules Engine
    post:
      description: 'Check below the list of behaviors that can be applied:


        | Name                                | Behavior               |

        | ----------------------------------- | ---------------------- |

        | Add Request Cookie                  | add_request_cookie     |

        | Add Request Header                  | add_request_header     |

        | Add Response Cookie                 | set_cookie             |

        | Add Response Header                 | add_response_header    |

        | Bypass Cache                        | bypass_cache_phase     |

        | Capture Match Groups                | capture_match_groups   |

        | Deliver                             | deliver                |

        | Deny (403 Forbidden)                | deny                   |

        | Enable Gzip                         | enable_gzip            |

        | Filter Request Cookie               | filter_request_cookie  |

        | Filter Request Header               | filter_request_header  |

        | Filter Response Cookie              | filter_response_cookie |

        | Filter Response Header              | filter_response_header |

        | Finish Request Phase                | finish_request_phase   |

        | Forward Cookies                     | forward_cookies        |

        | Optimize Images                     | optimize_images        |

        | Redirect HTTP to HTTPS              | redirect_http_to_https |

        | Redirect To (301 Moved Permanently) | redirect_to_301        |

        | Redirect To (302 Found)             | redirect_to_302        |

        | Rewrite Request                     | rewrite_request        |

        | Run Function                        | run_function           |

        | Set Cache Policy                    | set_cache_policy       |

        | Set Origin                          | set_origin             |'
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateRulesEngineRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RulesEngineIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      tags:
      - Edge Applications > Rules Engine
  /edge_applications/{edge_application_id}/rules_engine/{phase}/rules/{rule_id}:
    delete:
      parameters:
      - description: "The id of the edge application you plan to delete.\t"
        explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - description: "The id of the rule you plan to delete.\t"
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      tags:
      - Edge Applications > Rules Engine
    get:
      parameters:
      - description: "The id of the edge application you want to get.\t"
        explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - description: "The id of the rule you plan to delete.\t"
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RulesEngineIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      tags:
      - Edge Applications > Rules Engine
    patch:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PatchRulesEngineRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RulesEngineIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/rules_engine/:phase:/rules/:rule_id:'
      tags:
      - Edge Applications > Rules Engine
    put:
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: phase
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateRulesEngineRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RulesEngineIdResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: '/edge_applications/:edge_application_id:/rules_engine/:phase:/rules/:rule_id:'
      tags:
      - Edge Applications > Rules Engine
  /edge_applications/{id}:
    delete:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: The id of the edge application that you plan to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: No response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:id
      tags:
      - Edge Applications > Main Settings
    get:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:id
      tags:
      - Edge Applications > Main Settings
    patch:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateResponse'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:id
      tags:
      - Edge Applications > Main Settings
    put:
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: 'The type of coding used in the Body (application/json).

          <br>


          Example:

          Content-Type: application/json'
        example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: "The Id of the edge application to be overwritten.\t"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationPutRequest'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ApplicationPutResult'
          description: Successful response
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: /edge_applications/:id
      tags:
      - Edge Applications > Main Settings
  /edge_firewall:
    get:
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFirewallResponse'
          description: A list of edge firewalls
      summary: List all user edge firewall
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeFirewallRequest'
        required: true
      responses:
        '201':
          description: Edge firewall created
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Create a edge firewall
  /edge_firewall/:edge_firewall_id:/functions_instances:
    get:
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFunctionsInstancesResponse'
          description: A list of Edge Functions Instances
      summary: List all user Edge Functions Instances
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeFunctionsInstancesRequest'
        required: true
      responses:
        '201':
          description: Edge Functions Instance created
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Create an Edge Functions Instance
  /edge_firewall/:edge_firewall_id:/functions_instances/{uuid}:
    delete:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: Successfully deleted
      summary: Delete an Edge Functions Instance by uuid
    get:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFunctionsInstanceResponse'
          description: An Edge Functions Instance object
      summary: Retrieve an Edge Functions Instance set by uuid
    patch:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFunctionsInstanceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFunctionsInstancesResponse'
          description: Successfully updated
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Update some Edge Functions Instance attributes
    put:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFunctionsInstanceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFunctionsInstancesResponse'
          description: Successfully updated
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Overwrite some Edge Functions Instance attributes
  /edge_firewall/{uuid}:
    delete:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: Successfully deleted
      summary: Delete an edge firewall by uuid
    get:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFirewallResponse'
          description: An edge firewall object
      summary: Retrieve an edge firewall set by uuid
    patch:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFirewallRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFirewallResponse'
          description: Successfully updated
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Update some edge firewall attributes, like "active"
    put:
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFirewallRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFirewallResponse'
          description: Successfully updated
        '400':
          $ref: '#/components/schemas/BadRequestResponse'
        '500':
          $ref: '#/components/schemas/ErrorModel'
      summary: Overwrite some edge firewall attributes, like "active"
  /edge_functions:
    get:
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json; version=3:
              example:
                count: 1
                links:
                  next: null
                  previous: null
                results:
                - active: true
                  code: "async function handleRequest(request) {\r\n     return new\
                    \ Response(\"Hello World!\",\r\n       {\r\n           status:200\r\
                    \n       })\r\n    }\r\n    addEventListener(\"fetch\", event\
                    \ => {\r\n     event.respondWith(handleRequest(event.request))\r\
                    \n    })"
                  function_to_run: ''
                  id: 4184
                  initiator_type: edge_application
                  json_args: {}
                  language: javascript
                  last_editor: teste@gmail.com
                  modified: 2021-12-27 19:44:04.427738+00:00
                  name: Teste
                  reference_count: 0
                schema_version: 3
                total_pages: 1
              schema:
                $ref: '#/components/schemas/ListEdgeFunctionResponse'
          description: Success
        default:
          content:
            application/json:
              example:
                detail: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
    post:
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateEdgeFunctionRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFunctionResponse'
          description: Success
        '400':
          content:
            application/json:
              example:
                active:
                - This field is required.
                code:
                - This field is required.
                language:
                - This field is required.
                name:
                - This field may not be blank
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Invalid request
        default:
          content:
            application/json:
              example:
                message: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
  /edge_functions/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        '204':
          description: Success
        default:
          content:
            application/json:
              example:
                message: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                results:
                  active: true
                  code: "async function handleRequest(request) {\r\n     return new\
                    \ Response(\"Hello World!\",\r\n       {\r\n           status:200\r\
                    \n       })\r\n    }\r\n    addEventListener(\"fetch\", event\
                    \ => {\r\n     event.respondWith(handleRequest(event.request))\r\
                    \n    })"
                  function_to_run: ''
                  id: 4184
                  initiator_type: edge_application
                  json_args: {}
                  language: javascript
                  last_editor: lehdermann@gmail.com
                  modified: 2021-12-27 20:49:25.373356+00:00
                  name: Teste
                  reference_count: 0
                schema_version: 3
              schema:
                $ref: '#/components/schemas/EdgeFunctionResponse'
          description: Success
        default:
          content:
            application/json:
              example:
                message: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PatchEdgeFunctionRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                results:
                  active: true
                  code: "async function handleRequest(request) {\r\n     return new\
                    \ Response(\"Hello World!\",\r\n       {\r\n           status:200\r\
                    \n       })\r\n    }\r\n    addEventListener(\"fetch\", event\
                    \ => {\r\n     event.respondWith(handleRequest(event.request))\r\
                    \n    })"
                  function_to_run: ''
                  id: 4184
                  initiator_type: edge_application
                  json_args: {}
                  language: javascript
                  last_editor: lehdermann@gmail.com
                  modified: 2021-12-27 20:49:25.373356+00:00
                  name: Teste
                  reference_count: 0
                schema_version: 3
              schema:
                $ref: '#/components/schemas/EdgeFunctionResponse'
          description: Success
        '400':
          content:
            application/json:
              example:
                active:
                - This field is required.
                code:
                - This field is required.
                language:
                - This field is required.
                name:
                - This field may not be blank
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Invalid request
        default:
          content:
            application/json:
              example:
                message: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PutEdgeFunctionRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                results:
                  active: true
                  code: "async function handleRequest(request) {\r\n     return new\
                    \ Response(\"Hello World!\",\r\n       {\r\n           status:200\r\
                    \n       })\r\n    }\r\n    addEventListener(\"fetch\", event\
                    \ => {\r\n     event.respondWith(handleRequest(event.request))\r\
                    \n    })"
                  function_to_run: ''
                  id: 4184
                  initiator_type: edge_application
                  json_args: {}
                  language: javascript
                  last_editor: lehdermann@gmail.com
                  modified: 2021-12-27 20:49:25.373356+00:00
                  name: Teste
                  reference_count: 0
                schema_version: 3
              schema:
                $ref: '#/components/schemas/EdgeFunctionResponse'
          description: Success
        '400':
          content:
            application/json:
              example:
                active:
                - This field is required.
                code:
                - This field is required.
                language:
                - This field is required.
                name:
                - This field may not be blank
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Invalid request
        default:
          content:
            application/json:
              example:
                message: Sorry unable to perform operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: edge_functions
      tags:
      - edge_functions
  /edge_nodes:
    get:
      operationId: getEdgeNodes
      parameters:
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: order_by
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: only_ids
        schema:
          type: boolean
      - in: query
        name: page_size
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/EdgeNodeResponseWithTotal'
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Return edge-nodes
  /edge_nodes/authorize:
    patch:
      operationId: authorizeEdgeNode
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/AuthorizeEdgeNodesRequest'
        required: true
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/AuthorizeEdgeNodesResponse'
          description: OK
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
      summary: Authorize edge-node
  /edge_nodes/groups:
    get:
      operationId: getEdgeNodeGroups
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                items:
                  $ref: '#/components/schemas/NodeGroupResponse'
                type: array
          description: OK
        '500':
          description: Internal Server Error
      summary: Return edge-node groups
  /edge_nodes/{edgenodeId}:
    delete:
      operationId: delEdgeNode
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Delete edge-node by ID
    get:
      operationId: getEdgeNode
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/EdgeNodeDetailResponse'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Return edge-node by ID
    patch:
      operationId: updateEdgeNode
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/UpdateEdgeNodeResponse'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Update edge-node
  /edge_nodes/{edgenodeId}/services:
    get:
      operationId: getEdgeNodeSvcs
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: is_bound
        schema:
          type: boolean
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: order_by
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: page
        schema:
          format: int64
          type: integer
      - in: query
        name: page_size
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ServiceResponseWithTotal'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Return edge-node Services association
    post:
      operationId: createEdgeNodeSvcs
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ServiceBindRequest'
        required: true
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ServiceBindDetailResponse'
          description: Created
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Create an edge-node Service association
  /edge_nodes/{edgenodeId}/services/{bindId}:
    delete:
      operationId: delEdgeNodeSvc
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: bindId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Delete an edge-node Service association
    get:
      operationId: getEdgeNodeSvcDetail
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: bindId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ServiceBindDetailResponse'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Return edge-node Service association by ID
    patch:
      operationId: updateEdgeNodeSvcDetail
      parameters:
      - in: path
        name: edgenodeId
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: bindId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateServiceBindRequest'
        required: true
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ServiceBindDetailResponse'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Update edge-node Service association by ID
  /edge_services/:
    get:
      operationId: getServices
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseWithTotals'
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: Return Services by page
    post:
      operationId: newService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Created
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Create Service
  /edge_services/{id}:
    delete:
      operationId: deleteService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Delete Service by ID
    get:
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: with_vars
        required: false
        schema:
          type: boolean
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Return Service by ID
    patch:
      operationId: patchService
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Update Service by ID
  /edge_services/{serviceId}/resources:
    get:
      operationId: getResources
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponseWithTotal'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Return Service Resources by page
    post:
      operationId: postResource
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
          description: Created
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Create Service Resource
  /edge_services/{serviceId}/resources/{resourceId}:
    delete:
      operationId: deleteResource
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Delete Service Resource by ID
    get:
      operationId: getResource
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Return Service Resource by ID
    patch:
      operationId: patchServiceResource
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: resourceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      summary: Update Service Resource by ID
  /intelligent_dns:
    get:
      operationId: getZones
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetZonesResponse'
          description: Zones collection retrieved
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Error
      summary: Get a collection of Intelligent DNS zones
      tags:
      - Zones
    post:
      operationId: postZone
      requestBody:
        content:
          application/json:
            example:
              domain: new.domain.com
              is_active: true
              name: New Intelligent DNS zone
            schema:
              $ref: '#/components/schemas/Zone'
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/PostOrPutZoneResponse'
          description: Zone added
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Error
      summary: Add a new Intelligent DNS zone
      tags:
      - Zones
  /intelligent_dns/{zone_id}:
    delete:
      operationId: deleteZone
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        '204':
          content:
            application/json; version=3:
              schema:
                nullable: true
                type: string
          description: Zone removed
        '404':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Zone not found
      summary: Remove an Intelligent DNS hosted zone
      tags:
      - Zones
    get:
      operationId: getZone
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetZoneResponse'
          description: Zone retrieved
        '404':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Zone not found
      summary: Get an Intelligent DNS hosted zone
      tags:
      - Zones
    put:
      operationId: putZone
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              domain: other.domain.com
              is_active: true
              name: Update Intelligent DNS zone
            schema:
              $ref: '#/components/schemas/Zone'
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/PostOrPutZoneResponse'
          description: Zone updated
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Zone update error
      summary: Update an Intelligent DNS hosted zone
      tags:
      - Zones
  /intelligent_dns/{zone_id}/dnssec:
    get:
      operationId: getZoneDnsSec
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetOrPatchDnsSecResponse'
          description: DNSSEC status retrieved
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Error
      summary: Retrieve the DNSSEC zone status
      tags:
      - DNSSEC
    patch:
      operationId: putZoneDnsSec
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              is_enabled: true
            schema:
              $ref: '#/components/schemas/DnsSec'
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetOrPatchDnsSecResponse'
          description: Zone updated
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Zone update error
      summary: Update the DNSSEC zone
      tags:
      - DNSSEC
  /intelligent_dns/{zone_id}/records:
    get:
      operationId: getZoneRecords
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/GetRecordsResponse'
          description: Zones collection retrieved
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Error
      summary: Get a collection of Intelligent DNS zone records
      tags:
      - Records
    post:
      operationId: postZoneRecord
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              answers_list:
              - 1.2.3.4
              - 5.6.7.8
              description: Site record
              entry: site
              record_type: A
              ttl: 3600
            schema:
              $ref: '#/components/schemas/RecordPostOrPut'
      responses:
        '201':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/PostOrPutRecordResponse'
          description: Record added
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Error
      summary: Create a new Intelligent DNS zone record
      tags:
      - Records
  /intelligent_dns/{zone_id}/records/{record_id}:
    delete:
      operationId: deleteZoneRecord
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: The zone record id
        explode: false
        in: path
        name: record_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        '204':
          content:
            application/json; version=3:
              schema:
                nullable: true
                type: string
          description: Record removed
        '404':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Record not found
      summary: Remove an Intelligent DNS zone record
      tags:
      - Records
    put:
      operationId: putZoneRecord
      parameters:
      - description: The hosted zone id
        explode: false
        in: path
        name: zone_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - description: The zone record id
        explode: false
        in: path
        name: record_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              answers_list:
              - 1.2.3.4
              - 5.6.7.8
              - 1.1.2.2
              description: Site record
              entry: site
              record_type: A
              ttl: 3600
            schema:
              $ref: '#/components/schemas/RecordPostOrPut'
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/PostOrPutRecordResponse'
          description: Record updated
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
          description: Record update error
      summary: Update an Intelligent DNS zone record
      tags:
      - Records
  /network_lists:
    get:
      parameters:
      - in: query
        name: page
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkListsResponse'
          description: A list of Network Lists
      summary: List all user Network Lists
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkListsRequest'
        required: true
      responses:
        '201':
          description: Network Lists created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create a Network Lists
  /network_lists/{uuid}:
    get:
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkListsResponse'
          description: A Network Lists object
      summary: Retrieve a Network Lists set by uuid
    put:
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkListsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkListsResponse'
          description: Successfully updated
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Overwrite some Network Lists attributes
  /purge/cachekey:
    post:
      description: "List of Cache Keys you want to remove from the Azion Edge Servers\
        \ cache.\n\nurls (array): list of up to 50 Cache Keys to be expired from the\
        \ cache, per request.\n\nmethod (choice): purge method, use the \u201Cdelete\u201D\
        \ value for removal.\n\nLayer (choice): layer where the purge will be done.\
        \ Use the value \u201Cedge_caching\u201D (default value if not informed) to\
        \ purge on the Edge Caching layer and the value \u201Cl2_caching\u201D to\
        \ purge on L2 Caching."
      operationId: purgeCacheKey
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeCacheKeyRequest'
      responses:
        '200':
          content:
            application/json: {}
          description: Successful response
        '201':
          content:
            application/json; version=3: {}
          description: Created
        '204':
          content:
            application/json; version=3: {}
          description: No Content
        '207':
          content:
            application/json; version=3: {}
          description: Multi Status
        '400':
          content:
            application/json; version=3: {}
          description: Bad Request
        '401':
          content:
            application/json; version=3: {}
          description: Unauthorized
        '403':
          content:
            application/json; version=3: {}
          description: Forbidden
        '404':
          content:
            application/json; version=3: {}
          description: Not Found
        '405':
          content:
            application/json; version=3: {}
          description: Method Not Allowed
        '406':
          content:
            application/json; version=3: {}
          description: Not Acceptable
        '409':
          content:
            application/json; version=3: {}
          description: Conflict
        '429':
          content:
            application/json; version=3: {}
          description: Too Many Requests
        '500':
          content:
            application/json; version=3: {}
          description: Internal Server Error
      security:
      - JWT: []
      summary: /purge/cachekey
      tags:
      - Real-Time Purge
  /purge/url:
    post:
      description: "List of URLs you want to remove from the Azion Edge Servers cache.\n\
        \nurls (array): list of up to 50 URLs to be expired from the cache, per request.\n\
        \nmethod (choice): purge method, use the \u201Cdelete\u201D value for removal."
      operationId: purgeUrl
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PurgeUrlRequest'
      responses:
        '200':
          content:
            application/json; version=3: {}
          description: Successful response
        '201':
          content:
            application/json; version=3: {}
          description: Created
        '204':
          content:
            application/json; version=3: {}
          description: No Content
        '207':
          content:
            application/json; version=3: {}
          description: Multi Status
        '400':
          content:
            application/json; version=3: {}
          description: Bad Request
        '401':
          content:
            application/json; version=3: {}
          description: Unauthorized
        '403':
          content:
            application/json; version=3: {}
          description: Forbidden
        '404':
          content:
            application/json; version=3: {}
          description: Not Found
        '405':
          content:
            application/json; version=3: {}
          description: Method Not Allowed
        '406':
          content:
            application/json; version=3: {}
          description: Not Acceptable
        '409':
          content:
            application/json; version=3: {}
          description: Conflict
        '429':
          content:
            application/json; version=3: {}
          description: Too Many Requests
        '500':
          content:
            application/json; version=3: {}
          description: Internal Server Error
      security:
      - JWT: []
      summary: /purge/url
      tags:
      - Real-Time Purge
  /purge/wildcard:
    post:
      description: "The Wildcard expression that represents the list of objects that\
        \ you want to remove from the Azion Edge Servers cache.\n\nurls (array):the\
        \ Wildcard URL or Wildcard Cache Key that represents the list of objects you\
        \ want to expire. You can only use one Wildcard expression per request.\n\n\
        method (choice): purge method, use the \u201Cdelete\u201D value for removal."
      operationId: purgeWildcard
      parameters:
      - example: application/json; version=3
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeWildcardRequest'
      responses:
        '200':
          content:
            application/json: {}
          description: Successful response
        '201':
          content:
            application/json; version=3: {}
          description: Created
        '204':
          content:
            application/json; version=3: {}
          description: No Content
        '207':
          content:
            application/json; version=3: {}
          description: Multi Status
        '400':
          content:
            application/json; version=3: {}
          description: Bad Request
        '401':
          content:
            application/json; version=3: {}
          description: Unauthorized
        '403':
          content:
            application/json; version=3: {}
          description: Forbidden
        '404':
          content:
            application/json; version=3: {}
          description: Not Found
        '405':
          content:
            application/json; version=3: {}
          description: Method Not Allowed
        '406':
          content:
            application/json; version=3: {}
          description: Not Acceptable
        '409':
          content:
            application/json; version=3: {}
          description: Conflict
        '429':
          content:
            application/json; version=3: {}
          description: Too Many Requests
        '500':
          content:
            application/json; version=3: {}
          description: Internal Server Error
      security:
      - JWT: []
      summary: /purge/wildcard
      tags:
      - Real-Time Purge
  /storage/{version_id}:
    post:
      description: Upload file and transfer to remote storage
      parameters:
      - description: 'Required in order to get the path and file name. i.e.: assets/css/main.css'
        explode: false
        in: header
        name: X-Azion-Static-Path
        required: true
        schema:
          type: string
        style: simple
      - description: ''
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          b2/x-auto:
            schema:
              format: binary
              type: string
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
  /storage/{version_id}/delete:
    delete:
      description: Delete a version. A version is just um path prefix/sub-namespace
        for a set of files.
      operationId: deleteVersion
      parameters:
      - description: The version identifier
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '204':
          description: The resource was deleted successfully.
  /waf/{wafId}/domains:
    get:
      operationId: getWAFDomains
      parameters:
      - description: ID of WAF to return
        in: path
        name: wafId
        required: true
        schema:
          format: int64
          type: integer
      - description: searches WAF for name
        in: query
        name: name
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFDomains200'
          description: successful operation
      security:
      - JWT: []
      summary: Find domains attached to a WAF
      tags:
      - WAF
  /waf/{wafId}/waf_events:
    get:
      operationId: getWAFEvents
      parameters:
      - description: ID of WAF to return
        in: path
        name: wafId
        required: true
        schema:
          format: int64
          type: integer
      - description: Last log hours since now (it must be a integer number ranging
          between 1 and 72)
        in: query
        name: hour_range
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of a network list
        in: query
        name: network_list_id
        required: false
        schema:
          format: int64
          type: integer
      - description: Multiple domain's id (they must be separated by comma like 1233,1234)
        in: query
        name: domains_ids
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents200'
          description: successful operation
        '400':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents400'
          description: Bad request
        '401':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents401'
          description: unauthorized operation
        '404':
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/WAFEvents404'
          description: data not found
      security:
      - JWT: []
      summary: Find WAF log events
      tags:
      - WAF
security:
- tokenAuth: []
servers:
- description: Local Dev
  url: http://localhost:3002
- description: Staging
  url: https://stage-api.azion.net
- description: Production
  url: https://api.azionapi.net
tags:
- description: "If you need to delete an object from the Edge Caching or L2 Caching\
    \ layers before time-out, you can use the Real-Time Purge API. \nIf desired, integrate\
    \ the Azion API with your CMS to automate any content update process."
  name: Real-Time Purge
