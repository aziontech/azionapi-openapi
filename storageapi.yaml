openapi: 3.0.0
info:
  title: Storage API
  version: 1.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
- description: Production
  url: https://storage-api.azion.com
security:
- tokenAuth: []
paths:
  /storage/{version_id}:
    post:
      summary: /storage/:version_id
      description: 'Upload file and transfer to remote storage'
      parameters:
        - name: Content-Type
          in: header
          required: false
          description: "The content type of the file (Example: text/plain)."
          schema:
            type: string
            default: b2/x-auto
        - name: X-Azion-Static-Path
          description: "Required in order to get the path and file name. i.e.: assets/css/main.css"
          in: header
          required: true
          schema:
            type: string
        - name: version_id
          in: path
          required: true
          description: ''
          schema:
            type: string
      requestBody:
        content:
          'application/octet-stream':
            schema:
              type: string
              format: binary
      responses:
        '201':
          content:
            application/json:
              schema: { }
          description: ''
        '400':
          description: 'Bad request'
        '404':
          content:
            application/json:
              schema: { }
          description: 'Resource not found'

  /storage/{version_id}/delete:
    delete:
      operationId: deleteVersion
      summary: /storage/:version_id/delete
      description: 'Delete a version. A version is just um path prefix/sub-namespace for a set of files.'
      parameters:
        - name: version_id
          in: path
          required: true
          description: 'The version identifier'
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          description: 'Bad request'
        '404':
          content:
            application/json:
              schema: { }
          description: 'Resource not found'
components:
  responses:
    "401":
      content:
        application/json:
          schema:
            properties:
              detail:
                type: string
            type: object
      description: Token/Personal Token has been expired or invalid
  schemas: {}
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
