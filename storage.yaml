openapi: 3.0.3
info:
  title: Object Storage
  version: 1.0.0 (v1)
  description: REST API OpenAPI documentation for the Object Storage
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
- description: Production
  url: https://api.azion.com
paths:
  /storage/api/buckets:
    get:
      operationId: storage_api_buckets_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - storage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: storage_api_buckets_create
      description: ''
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BucketCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BucketCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
  /storage/api/buckets/{bucket_name}/objects:
    get:
      operationId: storage_api_buckets_objects_list
      description: ''
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - storage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBucketObjectList'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /storage/api/buckets/{bucket_name}/objects/{object_key}:
    get:
      operationId: storage_api_buckets_objects_retrieve
      description: Download the object file from bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      operationId: storage_api_buckets_objects_create
      description: Create a new object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      operationId: storage_api_buckets_objects_update
      description: Update the object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      operationId: storage_api_buckets_objects_destroy
      description: Create a new object by uploading a new file to bucket storage.
      parameters:
      - in: path
        name: bucket_name
        schema:
          type: string
        required: true
      - in: path
        name: object_key
        schema:
          type: string
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success object operation'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /storage/api/buckets/{name}:
    patch:
      operationId: storage_api_buckets_partial_update
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBucket'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
    delete:
      operationId: storage_api_buckets_destroy
      description: ''
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - storage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteBucket'
          description: ''
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBucket'
          description: ''
components:
  schemas:
    Bucket:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
    BucketCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
      required:
      - edge_access
      - name
    BucketObject:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        size:
          type: integer
          readOnly: true
        etag:
          type: string
          readOnly: true
      required:
      - etag
      - key
      - last_modified
      - size
    EdgeAccessEnum:
      enum:
      - read_only
      - read_write
      - restricted
      type: string
    PaginatedBucketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
    PaginatedBucketObjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BucketObject'
    PatchedBucket:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          maxLength: 63
          minLength: 6
        edge_access:
          $ref: '#/components/schemas/EdgeAccessEnum'
    ResponseBucket:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State7b9Enum'
        data:
          $ref: '#/components/schemas/Bucket'
      required:
      - data
      - state
    ResponseDeleteBucket:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State7b9Enum'
        data:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          nullable: true
      required:
      - data
      - state
    State7b9Enum:
      enum:
      - pending
      - executed
      type: string
    Success object operation:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/Success object operationStateEnum'
        data:
          $ref: '#/components/schemas/response data'
      required:
      - data
      - state
    Success object operationStateEnum:
      enum:
      - executed
      - pending
      type: string
    response data:
      type: object
      properties:
        object_key:
          type: string
      required:
      - object_key
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
