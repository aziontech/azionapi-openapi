openapi: 3.0.0
info:
  title: Digital Certificates API
  version: 2.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
  - description: Production
    url: https://api.azionapi.net
security:
  - tokenAuth: []
paths:
  /digital_certificates:
    get:
      tags:
        - Retrieve digital certificate list
      summary: List all existing digital certificates and CSRs registered to your account
      operationId: listDigitalCertificates
      parameters:
        - name: order_by
          in: query
          description: Response field to order by, current options are "name" or "id"
          required: false
          schema:
            type: string
            enum: [name, id]
            default: id
        - name: sort
          in: query
          description: Sorting direction
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: name
          in: query
          description: Searches certificate for name
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Searches for string in certificate name
          required: false
          schema:
            type: string

      responses:
        "200":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC200List"
        "400":
          description: Bad Request
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "401":
          description: Unauthorized
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC401"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"
        "404":
          description: Not Found
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC404"
        "406":
          description: Not acceptable
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC406"

    post:
      tags:
        - Create digital certificate
      summary: Create a new digital certificate
      operationId: createCertificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                certificate:
                  type: string
                private_key:
                  type: string
                certificate_type:
                  type: string
                  enum: [edge_certificate, trusted_ca_certificate]
                managed:
                  type: boolean
              example:
                name: "New SSL certificate for www.mydomain.com"
                certificate: "-----BEGIN CERTIFICATE-----\nMIIDCTCCAfGgAwIBAgIJAPpMWHKMIGuAMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNV\nBAMMEHd3dy5teWRvbWFpbi5jb20wHhcNMTgwMzI3MjAwOTA0WhcNMjgwMzI0MjAw\nOTA0WjAbMRkwFwYDVQQDDBB3d3cubXlkb21haW4uY29tMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAt25cziDBsHbZzZhy9BPLApPf9OmE67k9pr7VezsR\nkIw4trY2xtJXFB7itT1p7HxbLBoL5u8FGmMKssB+XTmztmgty43ogor1KSjUgfZg\nrpAqyXtrbSM5g+14c0VO9S0LkkePlHvul0UiblJj7K+gkvc6sZqXZY+TI1BPqeuO\ns9A4LLCUGziyNv0qJfIL5RZm07Yy35BEBTTxUWVL2msfaUH2uPM5XN5eFC7oKN0/\n3NuYIboRmyk+P7CDC99M8Mp/wOjiB+yVGZVTjeqGPI8nFWJl2waXkc54VvW84xQP\njwtid1v1KENK/ixMAAXi2cQ9gNRX+/USoneuWj5n4QUj6QIDAQABo1AwTjAdBgNV\nHQ4EFgQU2sDgtyYMDXvw79OhdvAFqcLmcwkwHwYDVR0jBBgwFoAU2sDgtyYMDXvw\n79OhdvAFqcLmcwkwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAKzCM\niG67IPwJK6MIJ31N734AofnjLf+fffxNtfYmH0XGORHPYUxCxsLxXiSFgPvubWh+\n7vLsKAm67bflMWbnxohuiOR0O/LJhLvhj6F+wgv0aDXpu581Hm8Ob/88ldbF6ND1\nTqzVATS0WDfl+z1QBKtNdDm3Nv45IZ83ob7OhIzD9MwL6tflBPDpWOYtmBDn0xSP\n6ra9d8oa6jK1fe2/5A7LY41acjbbNrLbFDYP7hcx02TmCfSMut+ysaZ/blay4Sbb\nwNlt92KhJw07UEKgXXbgyXGoFQkU8V+r2AZcgt0XM9jvwTc01Sbq/gegd2GMAj3x\nrTwkn5UNzFs56FCgNg==\n-----END CERTIFICATE-----"
                private_key: "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQB29Xrr3II5eeHr/8ttgB6uRg9bO0bS9qyhGS3QrHTYsME8/yZG\nULyN9FdDGPiExEHqpUVVeU1J5v3fGMXaskhXMCJIsuP5oFPQ10U7m9Kdcia4MXJZ\n7Bea6dVxsJuL4+CbuAaEjX52f3Q30uX3XyvrUtLA9vBJbHHmVUmZ22Qza5QHXWDD\ntAUTScEAGYfIb19BAZi8Zsz1aOniIhv91UyMKJeH/abP/\nq4ZskXf8yYjgG1mmhi\n4YlK1x0kYuHvcuDU4Sduf78bUKJ7uNK8wzg2NROJ8QYw+LQrPofg1+pYswZRfEcd\nqcXtnOqTdAQjAIOKG2lCCsVF221pz9to1DwHAgMBAAECggEAYpMqx/YTB1PDbY+q\n39MyGVG++eeV2c1E4b3+pBO0Q7e8eTIpYk0W4j7ebKBtl38V7D4FxT1eWWYLa2qY\n0Y+4uF8PmdR7a2h66+zm1u1ZytRD15BJ5M/qA5nPIIWrb3Fmt0L4S7EAYWteP8AI\nhkMcHsWkFPjLxtwRSj/UXKVbU+uh6NAkyQY2JnwRjPssIvEcDTLolDQ0IB5kHVMJ\nGXFboptKAlM41yaLXcTPVHmF3Jqt9p4T1AkaVTA1CVGuMG/KGDgt5whkND67a29W\nJFHu/RxPeBCTVgwYp6IuuXz2XylqkH4cOv1VsaXRWBjruHlp8tV2hUWW5khyYpoc\n9xsCeQKBgQDaMTt1agDsgMhw/y5RkmEW3eFXse+NwmSx+lAnrJCaBSvtZ2VojFqq\nGR+kJUoXxc1CgX2OtYL107yOdITPIlyjW8akPHU1hiiunmnwcXJBDPH2OeWF1OPS\nyeQbZUI4L7h5r5+GXQJNmDJjrXmDetnG5LCIoF7MC9+m6S1zqny9OwKBgQCLkl1Y\nXTwtM7FOE0pTC7kzbECbXTrAVg/sCALMWH9UOZ4OvSEj1z281fCfykO5WRkCD1uf\nrlrftQhvmJdj5P3Khz1ILQnNCnVEfHm7ILAQJRWOZfqLIMwIVTX7uhHLulfwQwiT\nNfBn2CjaNBn22jLXHlU15NJDmoma9aaivMp/pQKBgCQHmS/sTza+lVrDaJyjtVCX\nVwyqH0qjXQlesjm67y3fyL8tIbu/4YDRIT5zweZnDVv8EgWsx3Fcg3hqmTuzCuUW\n1JhuO1SZUMJ0+j1wHlPLlXD5YoNVAkHegMJdWC/7AVVmwMrpNOYnSbrX/\nIbPlIKZ\nZOVKxhyfoVDolE7TSkHdAoGBAIouWmRFynImH4Bg8NDPZohWwJAQ+T269wCD3eFa\nLJXChY2qCclmLCVs2lIY+nvijjPP6LJq+GVK4hM6S4gHCo0c37s5e96YYAlyA0MU\n1brmPDVDGY3s5pPJaSzTxxKgZrfkZfT5Dg6Bn9CIjLwswvDfgxVceh+cPGhClLvB\nlepRAoGAKT+xIeMoMkQeZruOL72AvO6raQGjY+yPbXCIFeZxwv5kb+m3UaXNaVbq\nH5KzJESG2ALhOvyHgj8YopNsMWQuleoAYVXdODp0w3omN4a3ajjMUuV8GXDQis+a\nQl7R6ytpLpoc1TYx6cLwK7qGSAzB8vz9ZQkd2iYFco43E7IdABc=\n-----END RSA PRIVATE KEY-----"
              required: [name, certificate, private_key]
      responses:
        "201":
          description: Created
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC201"
        "400":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"

  /digital_certificates/{digital_certificate_id}:
    get:
      tags:
        - Retrieve digital certificate by ID
      summary: Get more data on a specific digital certificate or CSR.
      operationId: getCertificate
      parameters:
        - name: digital_certificate_id
          in: path
          description: ID of certificate
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC200"
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "401":
          description: Unauthorized operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC401"
        "403":
          description: Forbidden operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"
        "404":
          description: Data not found
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC404"
        "406":
          description: Not Acceptable
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC406"
    put:
      tags:
        - Overwrite digital certificate
      summary: Overwrite a digital certificate with another complete digital certificate
      operationId: overwriteDigitalCertificate
      parameters:
        - name: digital_certificate_id
          in: path
          required: true
          description: ID of certificate to overwrite
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                certificate:
                  type: string
                private_key:
                  type: string
                certificate_type:
                  type: string
                  enum: [edge_certificate, trusted_ca_certificate]
                managed:
                  type: boolean

              example:
                name: "New SSL certificate for www.mydomain.com"
                certificate: "-----BEGIN CERTIFICATE-----\nMIIDCTCCAfGgAwIBAgIJAPpMWHKMIGuAMA0GCSqGSIb3DQEBBQUAMBsxGTAXBgNV\nBAMMEHd3dy5teWRvbWFpbi5jb20wHhcNMTgwMzI3MjAwOTA0WhcNMjgwMzI0MjAw\nOTA0WjAbMRkwFwYDVQQDDBB3d3cubXlkb21haW4uY29tMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAt25cziDBsHbZzZhy9BPLApPf9OmE67k9pr7VezsR\nkIw4trY2xtJXFB7itT1p7HxbLBoL5u8FGmMKssB+XTmztmgty43ogor1KSjUgfZg\nrpAqyXtrbSM5g+14c0VO9S0LkkePlHvul0UiblJj7K+gkvc6sZqXZY+TI1BPqeuO\ns9A4LLCUGziyNv0qJfIL5RZm07Yy35BEBTTxUWVL2msfaUH2uPM5XN5eFC7oKN0/\n3NuYIboRmyk+P7CDC99M8Mp/wOjiB+yVGZVTjeqGPI8nFWJl2waXkc54VvW84xQP\njwtid1v1KENK/ixMAAXi2cQ9gNRX+/USoneuWj5n4QUj6QIDAQABo1AwTjAdBgNV\nHQ4EFgQU2sDgtyYMDXvw79OhdvAFqcLmcwkwHwYDVR0jBBgwFoAU2sDgtyYMDXvw\n79OhdvAFqcLmcwkwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAKzCM\niG67IPwJK6MIJ31N734AofnjLf+fffxNtfYmH0XGORHPYUxCxsLxXiSFgPvubWh+\n7vLsKAm67bflMWbnxohuiOR0O/LJhLvhj6F+wgv0aDXpu581Hm8Ob/88ldbF6ND1\nTqzVATS0WDfl+z1QBKtNdDm3Nv45IZ83ob7OhIzD9MwL6tflBPDpWOYtmBDn0xSP\n6ra9d8oa6jK1fe2/5A7LY41acjbbNrLbFDYP7hcx02TmCfSMut+ysaZ/blay4Sbb\nwNlt92KhJw07UEKgXXbgyXGoFQkU8V+r2AZcgt0XM9jvwTc01Sbq/gegd2GMAj3x\nrTwkn5UNzFs56FCgNg==\n-----END CERTIFICATE-----"
                private_key: "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQB29Xrr3II5eeHr/8ttgB6uRg9bO0bS9qyhGS3QrHTYsME8/yZG\nULyN9FdDGPiExEHqpUVVeU1J5v3fGMXaskhXMCJIsuP5oFPQ10U7m9Kdcia4MXJZ\n7Bea6dVxsJuL4+CbuAaEjX52f3Q30uX3XyvrUtLA9vBJbHHmVUmZ22Qza5QHXWDD\ntAUTScEAGYfIb19BAZi8Zsz1aOniIhv91UyMKJeH/abP/\nq4ZskXf8yYjgG1mmhi\n4YlK1x0kYuHvcuDU4Sduf78bUKJ7uNK8wzg2NROJ8QYw+LQrPofg1+pYswZRfEcd\nqcXtnOqTdAQjAIOKG2lCCsVF221pz9to1DwHAgMBAAECggEAYpMqx/YTB1PDbY+q\n39MyGVG++eeV2c1E4b3+pBO0Q7e8eTIpYk0W4j7ebKBtl38V7D4FxT1eWWYLa2qY\n0Y+4uF8PmdR7a2h66+zm1u1ZytRD15BJ5M/qA5nPIIWrb3Fmt0L4S7EAYWteP8AI\nhkMcHsWkFPjLxtwRSj/UXKVbU+uh6NAkyQY2JnwRjPssIvEcDTLolDQ0IB5kHVMJ\nGXFboptKAlM41yaLXcTPVHmF3Jqt9p4T1AkaVTA1CVGuMG/KGDgt5whkND67a29W\nJFHu/RxPeBCTVgwYp6IuuXz2XylqkH4cOv1VsaXRWBjruHlp8tV2hUWW5khyYpoc\n9xsCeQKBgQDaMTt1agDsgMhw/y5RkmEW3eFXse+NwmSx+lAnrJCaBSvtZ2VojFqq\nGR+kJUoXxc1CgX2OtYL107yOdITPIlyjW8akPHU1hiiunmnwcXJBDPH2OeWF1OPS\nyeQbZUI4L7h5r5+GXQJNmDJjrXmDetnG5LCIoF7MC9+m6S1zqny9OwKBgQCLkl1Y\nXTwtM7FOE0pTC7kzbECbXTrAVg/sCALMWH9UOZ4OvSEj1z281fCfykO5WRkCD1uf\nrlrftQhvmJdj5P3Khz1ILQnNCnVEfHm7ILAQJRWOZfqLIMwIVTX7uhHLulfwQwiT\nNfBn2CjaNBn22jLXHlU15NJDmoma9aaivMp/pQKBgCQHmS/sTza+lVrDaJyjtVCX\nVwyqH0qjXQlesjm67y3fyL8tIbu/4YDRIT5zweZnDVv8EgWsx3Fcg3hqmTuzCuUW\n1JhuO1SZUMJ0+j1wHlPLlXD5YoNVAkHegMJdWC/7AVVmwMrpNOYnSbrX/\nIbPlIKZ\nZOVKxhyfoVDolE7TSkHdAoGBAIouWmRFynImH4Bg8NDPZohWwJAQ+T269wCD3eFa\nLJXChY2qCclmLCVs2lIY+nvijjPP6LJq+GVK4hM6S4gHCo0c37s5e96YYAlyA0MU\n1brmPDVDGY3s5pPJaSzTxxKgZrfkZfT5Dg6Bn9CIjLwswvDfgxVceh+cPGhClLvB\nlepRAoGAKT+xIeMoMkQeZruOL72AvO6raQGjY+yPbXCIFeZxwv5kb+m3UaXNaVbq\nH5KzJESG2ALhOvyHgj8YopNsMWQuleoAYVXdODp0w3omN4a3ajjMUuV8GXDQis+a\nQl7R6ytpLpoc1TYx6cLwK7qGSAzB8vz9ZQkd2iYFco43E7IdABc=\n-----END RSA PRIVATE KEY-----"
              required: [name, certificate, private_key]

      responses:
        "200":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC200"
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"
        "404":
          description: Not Found
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC404"
    patch:
      tags:
        - Update digital certificate
      summary: Change only select settings of your digital certificate or CSR.
      operationId: updateDigitalCertificate
      parameters:
        - name: digital_certificate_id
          in: path
          required: true
          description: ID of certificate to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                certificate:
                  type: string
                private_key:
                  type: string
                certificate_type:
                  type: string
                  enum: [edge_certificate, trusted_ca_certificate]
                managed:
                  type: boolean

              example:
                name: "New SSL certificate for www.mydomain.com"
                private_key: "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQB29Xrr3II5eeHr/8ttgB6uRg9bO0bS9qyhGS3QrHTYsME8/yZG\nULyN9FdDGPiExEHqpUVVeU1J5v3fGMXaskhXMCJIsuP5oFPQ10U7m9Kdcia4MXJZ\n7Bea6dVxsJuL4+CbuAaEjX52f3Q30uX3XyvrUtLA9vBJbHHmVUmZ22Qza5QHXWDD\ntAUTScEAGYfIb19BAZi8Zsz1aOniIhv91UyMKJeH/abP/\nq4ZskXf8yYjgG1mmhi\n4YlK1x0kYuHvcuDU4Sduf78bUKJ7uNK8wzg2NROJ8QYw+LQrPofg1+pYswZRfEcd\nqcXtnOqTdAQjAIOKG2lCCsVF221pz9to1DwHAgMBAAECggEAYpMqx/YTB1PDbY+q\n39MyGVG++eeV2c1E4b3+pBO0Q7e8eTIpYk0W4j7ebKBtl38V7D4FxT1eWWYLa2qY\n0Y+4uF8PmdR7a2h66+zm1u1ZytRD15BJ5M/qA5nPIIWrb3Fmt0L4S7EAYWteP8AI\nhkMcHsWkFPjLxtwRSj/UXKVbU+uh6NAkyQY2JnwRjPssIvEcDTLolDQ0IB5kHVMJ\nGXFboptKAlM41yaLXcTPVHmF3Jqt9p4T1AkaVTA1CVGuMG/KGDgt5whkND67a29W\nJFHu/RxPeBCTVgwYp6IuuXz2XylqkH4cOv1VsaXRWBjruHlp8tV2hUWW5khyYpoc\n9xsCeQKBgQDaMTt1agDsgMhw/y5RkmEW3eFXse+NwmSx+lAnrJCaBSvtZ2VojFqq\nGR+kJUoXxc1CgX2OtYL107yOdITPIlyjW8akPHU1hiiunmnwcXJBDPH2OeWF1OPS\nyeQbZUI4L7h5r5+GXQJNmDJjrXmDetnG5LCIoF7MC9+m6S1zqny9OwKBgQCLkl1Y\nXTwtM7FOE0pTC7kzbECbXTrAVg/sCALMWH9UOZ4OvSEj1z281fCfykO5WRkCD1uf\nrlrftQhvmJdj5P3Khz1ILQnNCnVEfHm7ILAQJRWOZfqLIMwIVTX7uhHLulfwQwiT\nNfBn2CjaNBn22jLXHlU15NJDmoma9aaivMp/pQKBgCQHmS/sTza+lVrDaJyjtVCX\nVwyqH0qjXQlesjm67y3fyL8tIbu/4YDRIT5zweZnDVv8EgWsx3Fcg3hqmTuzCuUW\n1JhuO1SZUMJ0+j1wHlPLlXD5YoNVAkHegMJdWC/7AVVmwMrpNOYnSbrX/\nIbPlIKZ\nZOVKxhyfoVDolE7TSkHdAoGBAIouWmRFynImH4Bg8NDPZohWwJAQ+T269wCD3eFa\nLJXChY2qCclmLCVs2lIY+nvijjPP6LJq+GVK4hM6S4gHCo0c37s5e96YYAlyA0MU\n1brmPDVDGY3s5pPJaSzTxxKgZrfkZfT5Dg6Bn9CIjLwswvDfgxVceh+cPGhClLvB\nlepRAoGAKT+xIeMoMkQeZruOL72AvO6raQGjY+yPbXCIFeZxwv5kb+m3UaXNaVbq\nH5KzJESG2ALhOvyHgj8YopNsMWQuleoAYVXdODp0w3omN4a3ajjMUuV8GXDQis+a\nQl7R6ytpLpoc1TYx6cLwK7qGSAzB8vz9ZQkd2iYFco43E7IdABc=\n-----END RSA PRIVATE KEY-----"

      responses:
        "200":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC200"
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"
        "404":
          description: Not Found
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC404"

    delete:
      tags:
        - Delete digital certificate
      summary: Remove a digital certificate or CSR from your account
      operationId: removeDigitalCertificates
      parameters:
        - name: digital_certificate_id
          in: path
          required: true
          description: ID of certificate to delete
          schema:
            type: integer

      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"

        "404":
          description: Not Found
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC404"
        "409":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC409"

  /digital_certificates/csr:
    post:
      tags:
        - Create CSR
      summary: Create an encrypted Certificate Request with Azion, which can then be sent for signing to a CA
      operationId: createCSR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                common_name:
                  type: string
                country:
                  type: string
                state:
                  type: string
                locality:
                  type: string
                organization:
                  type: string
                organization_unity:
                  type: string
                email:
                  type: string
                private_key_type:
                  type: string
                sans:
                  type: array
                  items:
                    type: string
              example:
                name: New CSR
                common_name: example.net
                country: US
                state: Washington
                locality: Seattle
                organization: Example
                organization_unity: IT
                email: itdepartment@example.com
                private_key_type: rsa_2048
                sans:
                  - www.example.net
                  - mail.example.net
                  - support.example.net
      responses:
        "201":
          description: Created
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC201"
        "400":
          description: Successful operation
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC400"
        "403":
          description: Forbidden
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/DC403"
components:
  schemas:
    singleResult:
      type: object
      example:
        id: 12345
        name: New SSL certificate for www.mydomain.com
        subject_name: []
        validity: 2028-03-24 20:09:00-03:00
        status: Active
        certificate_type: edge_certificate
        managed: false
      properties:
        id:
          type: integer
        name:
          type: string
        subject_name:
          type: array
          items:
            type: string
        issuer:
          type: string
          nullable: true
        validity:
          type: string
          nullable: true
        status:
          type: string
        certificate_type:
          type: string
          enum: [edge_certificate, trusted_ca_certificate]
        managed:
          type: boolean
        csr:
          type: string
          nullable: true
        certificate_content:
          type: string
          nullable: true
        azion_information:
          type: string

    results:
      type: array
      example:
        - id: 12345
          name: New SSL certificate for www.mydomain.com
          subject_name: []
          validity: 2028-03-24 20:09:00-03:00
          status: Active
          certificate_type: edge_certificate
          managed: false
        - id: 1
          name: New SSL certificate for www.mydomain.com
          subject_name: []
          validity: 2028-03-24 20:09:00-03:00
          status: Active
          certificate_type: edge_certificate
          managed: false
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          subject_name:
            type: array
            items:
              type: string
          validity:
            type: string
            nullable: true
          status:
            type: string
          certificate_type:
            type: string
            enum: [edge_certificate, trusted_ca_certificate]
          managed:
            type: boolean
          issuer:
            type: string
            nullable: true
          azion_information:
            type: string

    DC200:
      type: object
      properties:
        schema_version:
          type: integer
          example: 3
        result:
          $ref: "#/components/schemas/singleResult"

    DC200List:
      type: object
      properties:
        count:
          type: integer
          example: 2
        total_pages:
          type: integer
          example: 1
        schema_version:
          type: integer
          example: 3
        links:
          type: object
          properties:
            previous:
              type: string
              example: null
              nullable: true
            next:
              type: string
              example: null
              nullable: true

        results:
          $ref: "#/components/schemas/results"
    DC201:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Bad Request
              error: bad_request
            properties: {}
        schema_version:
          type: integer
          example: 3
    DC400:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Bad Request
              error: bad_request
            properties: {}
        schema_version:
          type: integer
          example: 3
    DC401:
      type: object
      properties:
        detail:
          type: string
          example: "Authentication credentials were not provided."
    DC403:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Forbidden
              error: forbidden
            properties: {}
        schema_version:
          type: integer
          example: 3
    DC404:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Digital certificate not found
              error: not_found
            properties: {}
        schema_version:
          type: integer
          example: 3
    DC406:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Not acceptable
              error: not_acceptable
            properties: {}
        schema_version:
          type: integer
          example: 3
    DC409:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            example:
              message: Conflict
              error: conflict
            properties: {}
        schema_version:
          type: integer
          example: 3
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to authenticate.
        Usage format: `Token <TOKEN>`
