openapi: 3.0.3
info:
  title: Personal Tokens - OpenAPI
  description: |
    The Personal Tokens API allows you to manage your existing personal tokens.
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
  version: 1.0.0
externalDocs:
  description: See the documentation of Personal Tokens for more information.
  url: https://www.azion.com/en/documentation/products/accounts/personal-tokens/
servers:
  - description: Production
    url: https://api.azionapi.net
security:
  - tokenAuth: []
tags:
  - name: Personal Token
    description: List all personal tokens
paths:
  /iam/personal_tokens:
    get:
      tags:
        - Personal Token
      summary: List all existing personal token 
      description: List all existing personal token
      operationId: ListPersonalToken
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalTokenResponseWithResults'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Rate Limit
        '500':
          description: Internal Server Error
    post:
      tags:
        - Personal Token
      summary: Create a new personal token 
      description: Create a new personal token
      operationId: CreatePersonalToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalTokenRequest'
              
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonalTokenResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Rate Limit
        '500':
          description: Internal Server Error

  /iam/personal_tokens/{personalTokenId}:
    get:
      tags:
        - Personal Token
      summary: Get a personal token info
      description: Get a personal token info
      operationId: GetPersonalToken
      parameters: 
      - in: path
        name: personalTokenId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalTokenResponseGet'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Rate Limit
        '500':
          description: Internal Server Error

    delete:
      tags:
        - Personal Token
      summary: Delete a personal token by id
      description: Delete a personal token
      operationId: DeletePersonalToken
      parameters: 
      - in: path
        name: personalTokenId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Rate Limit
        '500':
          description: Internal Server Error

components:
  schemas:
    PersonalTokenResponseWithResults:
      type: object
      properties:
        count:
          type: integer
          format: int64
        total_pages:
          type: integer
          format: int6
        schema_version: 
          type: integer
          format: int64
        links:
          type: object
          properties:
            next:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
        results:
            type: array
            items:
              $ref: '#/components/schemas/PersonalTokenResponseGet'
  
    PersonalTokenResponseGet:
      type: object
      properties:
        uuid: 
          type: string
          format: uuid
        name:
          type: string
        created:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        description: 
          type: string
          nullable: true
          
    CreatePersonalTokenRequest:
      type: object
      properties:
        name:
          type: string
        expires_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
          
    CreatePersonalTokenResponse:
      type: object
      properties:
        uuid: 
          type: string
          format: uuid
        name:
          type: string
        key:
          type: string
        user_id:
          type: number
        created:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        description: 
          type: string
          nullable: true
          
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
