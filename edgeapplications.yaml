openapi: 3.0.0
info:
  title: Edge Application
  description: >-
    ## Welcome to the Azion API!


    With the following APIs you can check, remove or update existing settings,
    besides creating new ones.


    * * *


    ## Overview


    The Azion API is a RESTful API, based on HTTPS requests, that allows you to
    integrate your systems with our platform, simply, quickly, and securely.


    Here you will find instructions on how our API works and what functionality
    is available.


    This documentation is being constantly updated. Make sure you verify if
    there are any updates or changes before you perform any development in your
    application, even if you are familiar with our API.


    * * *


    Both HTTPS requests and responses must be in JavaScript Object Notation
    (JSON) format. All HTTPS requests and responses must follow these
    conventions.


    **Base URL**


    The base URL of the API, which must be used, is:


    [**https://api.azionapi.net/**](https://api.azionapi.net/)


    **HTTP Methods**


    Each HTTP method defines the type of operation that will be run.


    | HTTP Method | CRUD | Whole Collection (e.g. /items) | Specific Item (e.g.
    /items/:item_id) |

    | --- | --- | --- | --- |

    | GET | Read | It retrieves the list of items in a Collection. | It
    retrieves a specific item in a Collection. |

    | POST | Create | It creates a new item in the Collection. | \- |

    | PUT | Update/Replace | It replaces a whole Collection with a new one. | It
    replaces an item in a Collection with a new one. |

    | PATCH | Update/Modify | It partially updates a Collection. | It partially
    updates an item in a Collection |

    | DELETE | Delete | It deletes a whole Collection. | It deletes an item in a
    Collection. |


    * * *


    **Status Codes**


    The HTTP return code defines the status – successful or not – after the
    requested operation is run.


    | Status Code | Meaning |

    | --- | --- |

    | 200 OK | General Status for a successful operation. |

    | 201 CREATED | Successfully created a collection or item, by means of POST
    or PUT. |

    | 204 NO CONTENT | Successful operation, but without any content to be
    return to the Body. Generally used for DELETE or PUT operations. |

    | 207 MULTI-STATUS | A batch of operations were triggered by a single
    request, which resulted in different return codes when it was run, for some
    of the operations. The codes are displayed in the “status” field, in the
    body of the response, for each sub-batch of operations for whichever are
    applicable. |

    | 400 BAD REQUEST | Request error, such as invalid parameters, missing
    mandatory parameters or others. |

    | 401 UNAUTHORIZED | Error caused by a missing HTTP Authentication header. |

    | 403 FORBIDDEN | User does not have the permissions to run the requested
    operation. |

    | 404 NOT FOUND | The requested resource does not exist. |

    | 405 METHOD NOT ALLOWED | The requested method is not applicable with the
    URL. |

    | 406 NOT ACCEPTABLE | Accept header missing from the HTTP request or the
    header contains formatting or the version is not supported by the API. |

    | 409 CONFLICT | Conflict generated in running the request, such as a
    request to create an already existing record. |

    | 429 TOO MANY REQUESTS | The request was temporarily rejected, due to
    exceeding the limit on operations. Wait for the time defined in the
    X-Ratelimit-Reset header and try again. |

    | 500 INTERNAL SERVER ERROR | Unintentional error, due to an unidentified
    failure in the request process. |

    | \--- |  |

    | **HTTP Headers** |  |


    All requests must be generated with the HTTP header specifying the desired
    code format for responses and the API version used. The current version of
    the API is 3 and the format is application/json.


    ```

    Accept: application/json; version=3


    ```


    * * *


    **Rate Limit**


    The limit of operations that can be run via the API is defined by 3 HTTP
    response headers:


    *   **X-ratelimit-limit:** number of operations allowed in one time-frame;

    *   **X-ratelimit-remaining:** number of operations still available in one
    time-frame;

    *   **X-ratelimit-reset:** is the date and time, in IOS 8601 format, which
    represents the point in the future when the time-frame will be closed and
    when the limits will, therefore, be reset.
        

    Example of HTTP response headers and a request:


    ```

    Date: Thu, 02 Nov 2017 12:30:28 GMT

    X-ratelimit-remaining: 199

    X-ratelimit-limit: 200

    X-ratelimit-reset: 2017-11-02T12:31:28.675446


    ```


    In the example provided, 200 operations are allowed within a 1-minute time
    frame. Of those, there are 199 still available, because one has already been
    run. The total limit will be reset after 1 minute.


    When the X-ratelimit-limit is reached, or in other words, when the
    X-ratelimit-remaining reaches zero, the API will give the error, HTTP 429
    TOO MANY REQUESTS. If your application receives this error, you will need to
    wait until the time defined in X-ratelimit-reset has passed, to make another
    request.


    *   **X-ratelimit-limit by product**
        

    The *X-ratelimit limit* variations by product are the following:


    *   **Real-Time Metrics:** 20 requests per minute.

    *   **Real-Time Purge:** 200 requests per minute; except for the Wildcard,
    which is 2000 a day.
        

    > The rate-limit values are based on the client_id.


    * * *


    **Optional Parameters**


    In this version, it is possible to include some optional parameters as part
    of the GET method, which can help and modify the form in which your data
    will be returned.


    You can combine these parameters to get the result you want.


    They are:


    | Parameter | Description | Accepted values: |

    | --- | --- | --- |

    | order_by | Identifies which field the return should be sorted by. The
    default ordering is ascending. | Depends on the fields available from the
    endpoint structure |

    | sort | Defines which ordering to be used: ascending or descending. | asc 
    <br>  <br>desc |

    | page | Identifies which page should be returned, if the return is
    paginated. The default value is 1. | Page number. |

    | page_size | Identifies how many items should be returned per page. The
    default value is 10. | Desired number of items. |


    * * *


    **Request Exemple**


    You can use one parameter, or a combination. See the example below, which
    uses all of them in the same request.


    ```

    GET /domains?order_by=name&page_size=20&sort=desc&page=3

    Accept: application/json; version=3

    Authorization: token 2909f3932069047f4736dc87e72baaddd19c9f75


    ```


    * * *


    # Authentication


    Authentication and authorization of operations via Azion API is done through
    Tokens.


    The first step is to create the Token through authenticating a user
    registered in [Real-Time Manager](https://sso.azion.com/login).


    * * *


    ## Encoding Username and Password in Base64


    Only token creation and cancelling operations are performed through Basic
    Authentication, that is, with a username and password. You can create and
    cancel the token through the API itself, but for that you need to encode
    your username and password in base64.


    Base64 encoding can be done from the command line on a Unix terminal:


    ```

    $ echo 'user@domain:password'|base64

    dXNlckBkb21haW46cGFzc3dvcmQK


    ```


    If you do not have a Unix terminal available, you can use the free online
    service at [https://www.base64encode.org/](https://www.base64encode.org/)
  version: 1.0.0
servers:
  - url: https://api.azionapi.net
components:
  schemas:
    GetApplicationsResponse:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
          type: object
        results:
          items:
            $ref: '#/components/schemas/ApplicationResults'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results
    ApplicationLinks:
      additionalProperties: false
      properties:
        previous:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
      required:
      - previous
      - next
      type: object
    ApplicationsResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        next:
          type: string
        active:
          type: boolean
        links:
          $ref: '#/components/schemas/ApplicationOrigins'
          type: object
      required:
      - previous
      - next
      type: object  
    ApplicationOrigins:
      additionalProperties: false
      properties:
        name:
          type: string
        origin_type:
          type: string
        origin_id:
          type: string
      required:
      - previous
      - next
      type: object
    GetApplicationResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationResults'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
    ApplicationResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        next:
          type: string
        active:
          type: boolean
        delivery_protocol:
          type: string
        http_port:
          format: int64
          type: integer
        https_port:
          format: int64
          type: integer
        minimum_tls_version:
          type: string
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
      required:
      - id
      - name
      - delivery_protocol
      - http_port
      - https_port
      - minimum_tls_version
      - active
      - application_acceleration
      - caching
      - device_detection
      - edge_firewall
      - edge_functions
      - image_optimization
      - l2_caching
      - load_balancer
      - raw_logs
      - web_application_firewall
    CreateApplicationRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        delivery_protocol:
          type: string
        origin_type:
          type: string
        address:
          type: string
        origin_protocol_policy:
          type: string
        host_header:
          type: string
        browser_cache_settings:
          type: string
        cdn_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
      required:
      - name
      type: object
    CreateApplicationResult:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationResultsCreate'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
    ApplicationResultsCreate:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        active:
          type: boolean
        delivery_protocol:
          type: string
        http_port:
          format: int64
          type: integer
        https_port:
          format: int64
          type: integer
        minimum_tls_version:
          type: string
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        image_optimization:
          type: boolean
        load_balancer:
          type: boolean
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
      required:
      - id
      - name
      - delivery_protocol
      - http_port
      - https_port
      - minimum_tls_version
      - active
      - application_acceleration
      - caching
      - device_detection
      - edge_firewall
      - edge_functions
      - image_optimization
      - load_balancer
      - raw_logs
      - web_application_firewall
    ApplicationUpdateRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        delivery_protocol:
          type: string
        http_port:
          format: int64
          type: integer
        https_port:
          format: int64
          type: integer
        minimum_tls_version:
          type: string
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
    ApplicationUpdateResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationUpdateResults'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
        - results
        - schema_version
    ApplicationUpdateResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        delivery_protocol:
          type: string
        http_port:
          format: int64
          type: integer
        https_port:
          format: int64
          type: integer
        minimum_tls_version:
          type: string
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
      required:
      - id
      - name
      - delivery_protocol
      - http_port
      - https_port
      - minimum_tls_version
      - active
      - application_acceleration
      - caching
      - device_detection
      - edge_firewall
      - edge_functions
      - image_optimization
      - l2_caching
      - load_balancer
      - raw_logs
      - web_application_firewall
    ApplicationPutRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        delivery_protocol:
          type: string
        http_port:
          format: int64
          type: integer
        https_port:
          format: int64
          type: integer
        minimum_tls_version:
          type: string
        active:
          type: boolean
        application_acceleration:
          type: boolean
        caching:
          type: boolean
        device_detection:
          type: boolean
        edge_firewall:
          type: boolean
        edge_functions:
          type: boolean
        image_optimization:
          type: boolean
        l2_caching:
          type: boolean
        load_balancer:
          type: boolean
        raw_logs:
          type: boolean
        web_application_firewall:
          type: boolean
      type: object
      required:
      - name
    ApplicationPutResult:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationUpdateResults'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
        - results
        - schema_version
    ApplicationCacheGetResponse:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
          type: object
        results:
          items:
            $ref: '#/components/schemas/ApplicationCacheResults'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results
    ApplicationCacheGetOneResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResults'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
    ApplicationCacheResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
        adaptive_delivery_action:
          type: string
        device_group:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
      type: object
      required:
      - id
      - name
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cache_by_query_string
      - query_string_fields
      - enable_query_string_sort
      - cache_by_cookies
      - cookie_names
      - adaptive_delivery_action
      - device_group
      - enable_caching_for_post
      - l2_caching_enabled
    ApplicationCacheCreateRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        slice_configuration_range:
          format: int64
          type: integer
      required:
      - name
    ApplicationCacheCreateResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheCreateResults'
          type: object
        schema_version:
          format: int64
          type: integer
    ApplicationCacheCreateResults:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
        adaptive_delivery_action:
          type: string
        device_group:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
      required:
      - id
      - name
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cache_by_query_string
      - query_string_fields
      - enable_query_string_sort
      - cache_by_cookies
      - cookie_names
      - adaptive_delivery_action
      - device_group
      - enable_caching_for_post
      - l2_caching_enabled
    ApplicationCachePutRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        slice_configuration_range:
          format: int64
          type: integer
      required:
      - name
      # - browser_cache_settings
      # - browser_cache_settings_maximum_ttl
      # - cdn_cache_settings
      # - cdn_cache_settings_maximum_ttl
      # - cache_by_query_string
      # - query_string_fields
      # - enable_query_string_sort
      # - cache_by_cookies
      # - cookie_names
      # - enable_caching_for_post
      # - l2_caching_enabled
    ApplicationCachePutResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResponseDetails'
          type: object
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
    ApplicationCachePatchRequest:
      additionalProperties: false
      properties:
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
        is_slice_configuration_enabled:
          type: boolean
        is_slice_edge_caching_enabled:
          type: boolean
        is_slice_l2_caching_enabled:
          type: boolean
        slice_configuration_range:
          format: int64
          type: integer
    ApplicationCachePatchResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationCacheResponseDetails'
          type: object
        schema_version:
          format: int64
          type: integer
    ApplicationCacheResponseDetails:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        browser_cache_settings:
          type: string
        browser_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cdn_cache_settings:
          type: string
        cdn_cache_settings_maximum_ttl:
          format: int64
          type: integer
        cache_by_query_string:
          type: string
        query_string_fields:
          type: array
          items:
            type: string
          nullable: true
        enable_query_string_sort:
          type: boolean
        cache_by_cookies:
          type: string
        cookie_names:
          type: array
          items:
            type: string
          nullable: true
        adaptive_delivery_action:
          type: string
        device_group:
          type: array
          items:
            type: string
        enable_caching_for_post:
          type: boolean
        l2_caching_enabled:
          type: boolean
      required:
      - id
      - name
      - browser_cache_settings
      - browser_cache_settings_maximum_ttl
      - cdn_cache_settings
      - cdn_cache_settings_maximum_ttl
      - cache_by_query_string
      - query_string_fields
      - enable_query_string_sort
      - cache_by_cookies
      - cookie_names
      - enable_caching_for_post
      - l2_caching_enabled
    ApplicationInstancesGetResponse:
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          $ref: '#/components/schemas/ApplicationLinks'
          type: object
        results:
          items:
            $ref: '#/components/schemas/ApplicationInstancesResults'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results
    ApplicationInstancesGetOneResponse:
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/ApplicationInstancesResults'
        schema_version:
          format: int64
          type: integer
      required:
      - results
      - schema_version
    ApplicationInstancesResults:
      properties:
        id:
          format: int64
          type: integer
        edge_function_id:
          format: int64
          type: integer
        name:
          type: string
        args: {}
      required:
      - id
      - edge_function_id
      - name
      - args
    ApplicationCreateInstanceRequest:
      properties:
        name:
          type: string
        edge_function_id:
          format: int64
          type: integer
        args: {}
      required:
      - name
      - edge_function_id
      - args
    ApplicationPutInstanceRequest:
      properties:
        name:
          type: string
        edge_function_id:
          format: int64
          type: integer
        args: {}
      required:
      - name
      - edge_function_id
      - args
    ApplicationUpdateInstanceRequest:
      properties:
        name:
          type: string
          nullable: true
        edge_function_id:
          format: int64
          type: integer
          nullable: true
        args: {}
      required:
      - name
      - edge_function_id
      - args
    ApplicationInstanceResults:
      additionalProperties: false
      properties:
        schema_version:
          format: int64
          type: integer
        results:
          $ref: '#/components/schemas/ApplicationInstancesResults'
          type: object
    CreateOriginsRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        origin_type:
          type: string
        addresses:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              address:
                type: string
            required:
            - address
        origin_protocol_policy:
          type: string
        host_header:
          type: string
        origin_path:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_access_key:
          type: string
        hmac_secret_key:
          type: string
      required:
      - name
      - addresses
      - host_header
    UpdateOriginsRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        origin_type:
          type: string
        addresses:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              address:
                type: string
            required:
            - address
        origin_protocol_policy:
          type: string
        host_header:
          type: string
        origin_path:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_access_key:
          type: string
        hmac_secret_key:
          type: string
      required:
      - name
      - addresses
      - host_header

    PatchOriginsRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        origin_type:
          type: string
        addresses:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              address:
                type: string
            required:
            - address
        origin_protocol_policy:
          type: string
        host_header:
          type: string
        origin_path:
          type: string
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_access_key:
          type: string
        hmac_secret_key:
          type: string
    OriginsResultResponse:
      type: object
      additionalProperties: false
      properties:
        origin_id:
          type: integer
          format: int64
        origin_key:
          type: string
        name:
          type: string
        origin_type:
          type: string
        addresses:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              address:
                type: string
              weight:
                type: string
                nullable: true
              server_role:
                type: string
              is_active:
                type: boolean
            required:
            - address
            - weight
            - server_role
            - is_active
        origin_protocol_policy:
          type: string
        is_origin_redirection_enabled:
          type: boolean
        host_header:
          type: string
        method:
          type: string
        origin_path:
          type: string
        connection_timeout:
          type: integer
          format: int64
        timeout_between_bytes:
          type: integer
          format: int64
        hmac_authentication:
          type: boolean
        hmac_region_name:
          type: string
        hmac_access_key:
          type: string
        hmac_secret_key:
          type: string
      required:
      - origin_id
      - origin_key
      - name
      - origin_type
      - addresses
      - origin_protocol_policy
      - is_origin_redirection_enabled
      - host_header
      - method
      - origin_path
      - connection_timeout
      - timeout_between_bytes
      - hmac_authentication
      - hmac_region_name
      - hmac_access_key
      - hmac_secret_key
    OriginsResponse:
      type: object
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          type: object
          additionalProperties: false
          properties:
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
        results:
          items:
            $ref: '#/components/schemas/OriginsResultResponse'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results
    OriginsIdResponse:
      type: object
      additionalProperties: false
      properties:
        results:
          type: object
          $ref: '#/components/schemas/OriginsResultResponse'
        schema_version:
          type: integer
          format: int64
      required:
      - results
      - schema_version
    CreateRulesEngineRequest:
      type: object
      properties:
        name:
          type: string
        criteria: 
          type: array 
          items:
            type: array 
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
        behaviors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              target: {}
            required:
            - name
      required:
      - name
      - criteria 
      - behaviors
    UpdateRulesEngineRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        criteria: 
          type: array 
          items:
            type: array 
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
        behaviors:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
            required:
            - name
      required:
      - name
      - criteria 
      - behaviors

    PatchRulesEngineRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        criteria: 
          type: array 
          items:
            type: array 
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
        behaviors:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
            required:
            - name
    RulesEngineResultResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phase:
          type: string
        behaviors:
          type: array 
          items:
            type: object
            properties:
              name:
                type: string
              target: {}
            required:
            - name
        criteria: 
          type: array 
          items:
            type: array 
            items:
              $ref: '#/components/schemas/RulesEngineCriteria'
        is_active: 
          type: boolean
        order:
          type: integer
          format: int64
      required:
      - id
      - name
      - phase
      - behavior
      - criteria
      - is_active
      - order
    RulesEngineCriteria:
      additionalProperties: false
      properties:
        conditional:
          type: string
        variable:
          type: string
        operator:
          type: string
        input_value:
          type: string
      required:
      - conditional
      - variable
      - operator
    RulesEngineResponse:
      type: object
      additionalProperties: false
      properties:
        count:
          format: int64
          type: integer
        total_pages:
          format: int64
          type: integer
        schema_version:
          format: int64
          type: integer
        links:
          type: object
          additionalProperties: false
          properties:
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
        results:
          items:
            $ref: '#/components/schemas/RulesEngineResultResponse'
          type: array
      required:
      - count
      - total_pages
      - schema_version
      - links
      - results

    RulesEngineIdResponse:
      type: object
      additionalProperties: false
      properties:
        results:
          $ref: '#/components/schemas/RulesEngineResultResponse'
          type: object
        schema_version:
          type: integer
          format: int64
      required:
      - results
      - schema_version    
  securitySchemes:
    JWT:
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
      in: header
      name: Authorization
      type: apiKey
# tags:
#   - name: Edge Applications
#     description: >-
#       The API of Edge Applications allows you to check, remove or update your
#       existing settings, as well as creating new ones.


#       In addition, take a look at the documentation for the following APIs:


#       - Cache Settings

#       - Edge Functions Instances

#       - Origins

#       - Rules Engines
#   - name: Edge Applications > Main Settings
#   - name: Edge Applications > Cache Settings
#     description: >-
#       With the API of Cache Settings, you can check, remove or update existing
#       settings, besides creating new ones.
#   - name: Edge Applications > Edge Functions Instances
#     description: >-
#       With the API of Edge Functions Instances, you can check, remove or update
#       existing settings, besides creating new ones.
#   - name: Edge Applications > Origins
#     description: >-
#       With the API of Origins you can check, remove or update existing settings,
#       besides creating new ones.
#   - name: Edge Applications > Rules Engine
#     description: >-
#       With the Rules Engine API, you can retrieve, remove or update existing
#       settings, besides creating new ones.
paths:
  /edge_applications:
    get:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications
      security:
        - JWT: []
      parameters:
      - in: query
        name: page
        schema:
          format: int64
          type: integer
      - in: query
        name: page_size
        schema:
          format: int64
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: order_by
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
        example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/GetApplicationsResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    post:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
              example:
                name: Nova Edge Application
                delivery_protocol: http
                origin_type: single_origin
                address: www.new.api
                origin_protocol_policy: preserve
                host_header: www.new.api
                browser_cache_settings: override
                browser_cache_settings_maximum_ttl: 20
                cdn_cache_settings: honor
                cdn_cache_settings_maximum_ttl: 60
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
        - name: ''
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/CreateApplicationResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{id}:
    get:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications/:id
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/GetApplicationResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications/:id
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: The id of the edge application that you plan to delete.
      responses:
        '204':
          description: No response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications/:id
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateRequest'
              example:
                id: 1620144023
                name: Update Edge Application
                delivery_protocol: http,https
                http_port: 80
                https_port: 443
                minimum_tls_version: ''
                active: true
                application_acceleration: false
                caching: true
                device_detection: false
                edge_firewall: false
                edge_functions: false
                image_optimization: true
                l2_caching: true
                load_balancer: false
                raw_logs: false
                web_application_firewall: false
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationUpdateResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Edge Applications > Main Settings
      summary: /edge_applications/:id
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationPutRequest'
              example:
                id: 1620144023
                name: Overwrite Edge Application
                delivery_protocol: http,https
                http_port: 80
                https_port: 443
                minimum_tls_version: ''
                active: true
                application_acceleration: false
                caching: true
                device_detection: false
                edge_firewall: false
                edge_functions: false
                image_optimization: true
                l2_caching: true
                load_balancer: false
                raw_logs: false
                web_application_firewall: false
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: "The Id of the edge application to be overwritten.\t"
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationPutResult"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/cache_settings:
    get:
      tags:
        - Edge Applications > Cache Settings
      summary: /edge_applications/{edge_application_id}/cache_settings
      security:
        - JWT: []
      parameters:
      - name: edge_application_id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: page
        schema:
          format: int64
          type: integer
      - in: query
        name: page_size
        schema:
          format: int64
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: order_by
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - name: Accept
        in: header
        schema:
          type: string
        example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationCacheGetResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    post:
      tags:
        - Edge Applications > Cache Settings
      summary: /edge_applications/:edge_application_id:/cache_settings
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCacheCreateRequest'
              example:
                name: Test Cache Settings 2
                browser_cache_settings: honor
                cdn_cache_settings: honor
                cdn_cache_settings_maximum_ttl: '60'
                cache_by_query_string: all
                cache_by_cookies: all
                l2_caching_enabled: false
                is_slice_configuration_enabled: true
                is_slice_edge_caching_enabled: true
                is_slice_l2_caching_enabled: false
                slice_configuration_range: false
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationCacheCreateResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error

  /edge_applications/{edge_application_id}/cache_settings/{cache_settings_id}:
    get:
      tags:
        - Edge Applications > Cache Settings
      summary: >-
        /edge_applications/:edge_application_id:/cache_settings/:cache_settings_id:
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: cache_settings_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationCacheGetOneResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Edge Applications > Cache Settings
      summary: /edge_applications/:edge_application_id:/cache_settings/ca
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCachePutRequest'
              example:
                name: Test Cache Settings 3
                browser_cache_settings: honor
                cdn_cache_settings: honor
                cdn_cache_settings_maximum_ttl: '60'
                cache_by_query_string: all
                cache_by_cookies: all
                l2_caching_enabled: false
                is_slice_configuration_enabled: true
                is_slice_edge_caching_enabled: true
                is_slice_l2_caching_enabled: false
                slice_configuration_range: false
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: cache_settings_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationCachePutResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/cache_settings/{cache_settings}:
    delete:
      tags:
        - Edge Applications > Cache Settings
      summary: '/edge_applications/:edge_application_id:/cache_settings/:cache_settings:'
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: cache_settings
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '204':
          description: No response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Edge Applications > Cache Settings
      summary: >-
        /edge_applications/:edge_application_id:/cache_settings/:cache_settings_id:
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCachePatchRequest'
              example:
                name: Test Cache Settings 4
                browser_cache_settings: honor
                cdn_cache_settings: honor
                cdn_cache_settings_maximum_ttl: '60'
                cache_by_query_string: all
                cache_by_cookies: all
                l2_caching_enabled: false
                is_slice_configuration_enabled: true
                is_slice_edge_caching_enabled: true
                is_slice_l2_caching_enabled: false
                slice_configuration_range: false
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: cache_settings
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationCachePatchResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/functions_instances:
    get:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: /edge_applications/:edge_application_id:/functions_instances
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            format: int64
            type: integer
        - in: query
          name: page_size
          schema:
            format: int64
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: order_by
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationInstancesGetResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    post:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: edge_application/:edge_application_id:/functions_instances
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationCreateInstanceRequest'
              example:
                name: Edge Function
                edge_function_id: 13
                args: {}
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationInstanceResults"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/functions_instances/{functions_instances_id}:
    get:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: >-
        /edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: functions_instances_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
          description: "The id of the edge function instance you plan to query.\t"
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationInstancesGetOneResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: >-
        /edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationPutInstanceRequest'
              example:
                name: Edge Function2
                edge_function_id: 978
                args:
                  param:
                    cookie:
                      name: azion_abtes2t
                      expiration: Wed, 04 May 2011 10:16:00 GMT
                      max_age: 600
                      domain: localhost
                      path: /
                    a:
                      cookie_value: A_TEST
                      prob: 0.5
                      addresses_list: localhost:2006
                      originid: uuid1
                      live_ingest: false
                      protocol_policy: http
                      path: ''
                      cache_key: test_a
                      host: localhost
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
        - name: edge_application_id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the edge application you plan to overwrite\t"
        - name: functions_instances_id
          in: path
          schema:
            type: string
          required: true
          description: The id of the edge function instance you plan to overwrite.
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationInstanceResults"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: >-
        /edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateInstanceRequest'
              example:
                name: Edge Function2
                edge_function_id: 978
                args:
                  param:
                    cookie:
                      name: azion_abtes2t
                      expiration: Wed, 04 May 2011 10:16:00 GMT
                      max_age: 600
                      domain: localhost
                      path: /
                    a:
                      cookie_value: A_TEST
                      prob: 0.5
                      addresses_list: localhost:2006
                      originid: uuid1
                      live_ingest: false
                      protocol_policy: http
                      path: ''
                      cache_key: test_a
                      host: localhost
      security:
        - JWT: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
        - name: edge_application_id
          in: path
          schema:
            type: string
          required: true
          description: "The id of the edge application you plan to overwrite\t"
        - name: functions_instances_id
          in: path
          schema:
            type: string
          required: true
          description: The id of the edge function instance you plan to overwrite.
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/ApplicationInstanceResults"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Edge Applications > Edge Functions Instances
      summary: >-
        /edge_applications/:edge_application_id:/functions_instances/:functions_instances_id:
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            type: string
        - name: functions_instances_id
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '204':
          description: No response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/origins:
    get:
      tags:
        - Edge Applications > Origins
      summary: '/edge_applications/{edge_application_id}/origins'
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/OriginsResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    post:
      tags:
        - Edge Applications > Origins
      summary: /edge_applications/{edge_application_id}/origins
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateOriginsRequest'
              example:
                name: Create Origin
                origin_type: single_origin
                addresses:
                  - address: httpbin.org
                origin_protocol_policy: http
                host_header: ${host}
                origin_path: /requests
                hmac_authentication: false
                hmac_region_name: ''
                hmac_access_key: ''
                hmac_secret_key: ''
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/OriginsIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/origins/{origin_key}:
    get:
      tags:
        - Edge Applications > Origins
      summary: '/edge_applications/{edge_application_id}/origins/{origin_key}'
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: origin_key
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
          description: The id of the Origin that you plan to query.
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/OriginsIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Edge Applications > Origins
      summary: '/edge_applications/{edge_application_id}/origins/{origin_id}'
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: origin_key
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
          description: The id of the Origin that you plan to delete.
      responses:
        '204':
          description: No response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Edge Applications > Origins
      summary: '/edge_applications/{edge_application_id}/origins/{origin_id}'
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateOriginsRequest'
              example:
                name: Create Origin
                origin_type: single_origin
                addresses:
                  - address: httpbin.org
                origin_protocol_policy: http
                host_header: ${host}
                origin_path: /anything
                hmac_authentication: false
                hmac_region_name: ''
                hmac_access_key: ''
                hmac_secret_key: ''
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: origin_key
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/OriginsIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Edge Applications > Origins
      summary: '/edge_applications/:edge_application_id:/origins/:origin_id:'
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PatchOriginsRequest'
              example:
                name: Create Origin
                origin_type: single_origin
                addresses:
                  - address: httpbin.org
                origin_protocol_policy: http
                host_header: ${host}
                origin_path: /anything
                hmac_authentication: false
                hmac_region_name: ''
                hmac_access_key: ''
                hmac_secret_key: ''
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: origin_key
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/OriginsIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/rules_engine/{phase}/rules:
    get:
      tags:
        - Edge Applications > Rules Engine
      summary: '/edge_applications/{edge_application_id}/rules_engine/{phase}/rules'
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            format: int64
            type: integer
        - in: query
          name: page_size
          schema:
            format: int64
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: order_by
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
        - name: phase
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/RulesEngineResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    post:
      tags:
        - Edge Applications > Rules Engine
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      description: |-
        Check below the list of behaviors that can be applied:

        | Name                                | Behavior               |
        | ----------------------------------- | ---------------------- |
        | Add Request Cookie                  | add_request_cookie     |
        | Add Request Header                  | add_request_header     |
        | Add Response Cookie                 | set_cookie             |
        | Add Response Header                 | add_response_header    |
        | Bypass Cache                        | bypass_cache_phase     |
        | Capture Match Groups                | capture_match_groups   |
        | Deliver                             | deliver                |
        | Deny (403 Forbidden)                | deny                   |
        | Enable Gzip                         | enable_gzip            |
        | Filter Request Cookie               | filter_request_cookie  |
        | Filter Request Header               | filter_request_header  |
        | Filter Response Cookie              | filter_response_cookie |
        | Filter Response Header              | filter_response_header |
        | Finish Request Phase                | finish_request_phase   |
        | Forward Cookies                     | forward_cookies        |
        | Optimize Images                     | optimize_images        |
        | Redirect HTTP to HTTPS              | redirect_http_to_https |
        | Redirect To (301 Moved Permanently) | redirect_to_301        |
        | Redirect To (302 Found)             | redirect_to_302        |
        | Rewrite Request                     | rewrite_request        |
        | Run Function                        | run_function           |
        | Set Cache Policy                    | set_cache_policy       |
        | Set Origin                          | set_origin             |
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateRulesEngineRequest'
              example:
                name: New Rule 2
                criteria:
                  - - conditional: if
                      variable: ${uri}
                      operator: starts_with
                      input_value: /
                    - conditional: and
                      variable: ${uri}
                      operator: does_not_start_with
                      input_value: /if
                behaviors:
                  - name: deliver
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: phase
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/RulesEngineIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /edge_applications/{edge_application_id}/rules_engine/{phase}/rules/{rule_id}:
    delete:
      tags:
        - Edge Applications > Rules Engine
      summary: /edge_applications/{edge_application_id}/rules_engine/{phase}/rules
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
          description: "The id of the edge application you plan to delete.\t"
        - name: phase
          in: path
          required: true
          schema:
            type: string
        - name: rule_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
          description: "The id of the rule you plan to delete.\t"
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
      responses:
        '204':
          description: No response
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    put:
      tags:
        - Edge Applications > Rules Engine
      summary: >-
        /edge_applications/:edge_application_id:/rules_engine/:phase:/rules/:rule_id:
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/UpdateRulesEngineRequest'
              example:
                name: The Rule
                criteria:
                  - - conditional: if
                      variable: ${uri}
                      operator: starts_with
                      input_value: /
                    - conditional: and
                      variable: ${uri}
                      operator: does_not_start_with
                      input_value: /if
                behaviors:
                  - name: deliver
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: phase
          in: path
          required: true
          schema:
            type: string
        - name: rule_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/RulesEngineIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Edge Applications > Rules Engine
      summary: >-
        /edge_applications/:edge_application_id:/rules_engine/:phase:/rules/:rule_id:
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/PatchRulesEngineRequest'
              example:
                name: The Rule 3
                criteria:
                  - - conditional: if
                      variable: ${uri}
                      operator: starts_with
                      input_value: /
                    - conditional: and
                      variable: ${uri}
                      operator: does_not_start_with
                      input_value: /if
                behaviors:
                  - name: deliver
      security:
        - JWT: []
      parameters:
        - name: edge_application_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: phase
          in: path
          required: true
          schema:
            type: string
        - name: rule_id
          in: path
          required: true
          schema:
            format: int64
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; version=3
        - name: Content-Type
          in: header
          schema:
            type: string
          description: |-
            The type of coding used in the Body (application/json).
            <br>

            Example:
            Content-Type: application/json
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json; version=3:
              schema:
                $ref: "#/components/schemas/RulesEngineIdResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error