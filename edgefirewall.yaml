openapi: 3.0.0
info:
  title: Edge Firewall API
  version: 2.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
- description: Production
  url: https://api.azionapi.net
security:
- tokenAuth: []
paths:
  /edge_firewall:
    get:
      summary: List all user edge firewall
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: order_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of edge firewalls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeFirewallResponse'
        "404":
          description: Not found
    post:
      summary: Create a edge firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeFirewallRequest'
        required: true
      responses:
        "201":
          description: Edge firewall created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFirewallResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /edge_firewall/{uuid}:
    get:
      summary: Retrieve an edge firewall set by uuid
      parameters:
      - name: uuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: An edge firewall object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFirewallResponse'
        "400":
          description: Bad Request
        "404":
          description: Not found
    put:
      summary: "Overwrite some edge firewall attributes, like \"active\""
      parameters:
      - name: uuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFirewallRequest'
        required: true
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFirewallResponse'
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
    delete:
      summary: Delete an edge firewall by uuid
      parameters:
      - name: uuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad Request
        "404":
          description: Not found
    patch:
      summary: "Update some edge firewall attributes, like \"active\""
      parameters:
      - name: uuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEdgeFirewallRequest'
        required: true
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFirewallResponse'
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error

  /edge_firewall/{edge_firewall_id}/rules_engine:
    parameters:
      - $ref: '#/components/parameters/edge_firewall_id'
    post:
      summary: Create rule set.
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateRuleSetRequest'
      responses:
        "201":
          description: Create rule set.
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RuleSetResponse'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error

    get:
      summary: List all rule sets.
      parameters:
        - name: page
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: order_by
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: List all rule sets.
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RuleSetResponseAll'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

  /edge_firewall/{edge_firewall_id}/rules_engine/{rule_set_id}:
    parameters:
      - $ref: '#/components/parameters/edge_firewall_id'
      - $ref: '#/components/parameters/rule_set_id'
    get:
      parameters:
      - $ref: '#/components/parameters/order_by'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/page_size'
      summary: Retrieve rule set by ID.
      responses:
        "200":
          description: Retrieve rule set by ID.
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RuleSetResult'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

    put:
      summary: Overwrite rule set
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateRuleSetRequest'
      responses:
        "200":
          description: Overwrite rule set.
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RuleSetResult'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error

    patch:
      summary: Edit rule set.
      requestBody:
        content:
          application/json; version=3:
            schema:
              $ref: '#/components/schemas/CreateRuleSetRequest'
      responses:
        "200":
          description: Edit rule set.
          content:
            application/json; version=3:
              schema:
                $ref: '#/components/schemas/RuleSetResult'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error

    delete:
      summary: Delete rule set.
      responses:
        "204":
          description: Delete rule set.
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error

components:
  parameters:
    edge_firewall_id:
      in: path
      name: edge_firewall_id
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1

    rule_set_id:
      in: path
      name: rule_set_id
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1

    order_by:
      in: query
      name: order_by
      required: false
      schema:
        type: string

    sort:
      in: query
      name: sort
      required: false
      schema:
        type: string
        enum: [ASC, DESC]

    page:
      in: query
      name: page
      required: false
      schema:
        type: integer
        format: int64
        minimum: 1
        default: 1

    page_size:
      in: query
      name: page_size
      required: false
      schema:
        type: integer
        format: int64
        minimum: 1
        default: 10

  schemas:
    Links:
      type: object
      properties:
        previous:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
      example:
        next: next
        previous: previous
    EdgeFirewall:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        is_active:
          type: boolean
        last_editor:
          type: string
        last_modified:
          type: string
        edge_functions_enabled:
          type: boolean
        network_protection_enabled:
          type: boolean
        waf_enabled:
          type: boolean
        debug_rules:
          type: boolean
        domains:
          type: array
          items:
            type: integer
            format: int64
      example:
        is_active: true
        last_editor: last_editor
        name: name
        waf_enabled: true
        network_protection_enabled: true
        domains:
        - 5
        - 5
        edge_functions_enabled: true
        id: 5
        last_modified: last_modified
        debug_rules: true
    ListEdgeFirewallResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
        total_pages:
          type: integer
          format: int64
        schema_version:
          type: integer
          format: int64
        links:
          $ref: '#/components/schemas/Links'
        results:
          type: array
          items:
            $ref: '#/components/schemas/EdgeFirewall'
      example:
        schema_version: 1
        count: 0
        links:
          next: next
          previous: previous
        total_pages: 6
        results:
        - is_active: true
          last_editor: last_editor
          name: name
          waf_enabled: true
          network_protection_enabled: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          last_modified: last_modified
          debug_rules: true
        - is_active: true
          last_editor: last_editor
          name: name
          waf_enabled: true
          network_protection_enabled: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          last_modified: last_modified
          debug_rules: true
    CreateEdgeFirewallRequest:
      type: object
      properties:
        name:
          type: string
        domains:
          type: array
          items:
            type: integer
            format: int64
        is_active:
          type: boolean
        edge_functions_enabled:
          type: boolean
        network_protection_enabled:
          type: boolean
        waf_enabled:
          type: boolean
    EdgeFirewallResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/EdgeFirewall'
        schema_version:
          type: number
      example:
        schema_version: 0.80082819046101150206595775671303272247314453125
        results:
          is_active: true
          last_editor: last_editor
          name: name
          waf_enabled: true
          network_protection_enabled: true
          domains:
          - 5
          - 5
          edge_functions_enabled: true
          id: 5
          last_modified: last_modified
          debug_rules: true
    UpdateEdgeFirewallRequest:
      type: object
      properties:
        name:
          type: string
        domains:
          type: array
          items:
            type: integer
            format: int64
        is_active:
          type: boolean
        edge_functions_enabled:
          type: boolean
        network_protection_enabled:
          type: boolean
        waf_enabled:
          type: boolean

    Behaviors:
      oneOf:
        - $ref: '#/components/schemas/NullArgumentBehavior'
        - $ref: '#/components/schemas/SimpleArgumentBehavior'
        - $ref: '#/components/schemas/SetRateLimitBehavior'
        - $ref: '#/components/schemas/SetWAFRuleSetBehavior'

    NullArgumentBehavior:
      type: object
      properties:
        name:
          type: string
          enum: [deny, drop]
        argument:
          type: integer
          nullable: true

    SetRateLimitBehavior:
      type: object
      properties:
        name:
          type: string
          enum: [set_rate_limit]
        argument:
          type: object
          properties:
            type:
              type: string
              enum: [second, minute]
            limit_by:
              type: string
              enum: [client_ip, global]
            average_rate_limit:
              oneOf:
                - type: integer
                  minimum: 1
                - type: string
            maximum_burst_size:
              oneOf:
                - type: integer
                  minimum: 1
                - type: string
          example:
            type: "second"
            limit_by: "client_ip"
            average_rate_limit: 100
            maximum_burst_size: 10

    SetWAFRuleSetBehavior:
      type: object
      properties:
        name:
          type: string
          enum: [set_waf_ruleset]
        argument:
          type: object
          properties:
            waf_id:
              type: integer
              minimum: 1
            mode:
              type: string
              enum: [Learning, Blocking]
          example:
            waf_id: 1
            mode: "Blocking"

    SimpleArgumentBehavior:
      type: object
      properties:
        name:
          type: string
          enum: [run_function, tag_event]
        argument:
          oneOf:
            - type: string
            - type: number

    Variables:
      type: string
      enum: [header_accept, header_accept_encoding, header_accept_language, header_cookie, header_origin, header_referer, header_user_agent, host, network, request_args, request_method, request_uri, scheme, client_certificate_validation]

    Conditionals:
      type: string
      enum: [if, and, or]

    SSLVerificationStatusOperators:
      type: string
      enum: [is_equal, is_not_equal]

    SSLVerificationStatusArguments:
      type: string
      enum: [SUCCESS, CERTIFICATE_VERIFICATION_ERROR, MISSING_CLIENT_CERTIFICATE]

    SSLVerificationStatusCriteria:
      type: object
      properties:
        variable:
          $ref: '#/components/schemas/Variables'
        operator:
          $ref: '#/components/schemas/SSLVerificationStatusOperators'
        conditional:
          $ref: '#/components/schemas/Conditionals'
        input_value:
          $ref: '#/components/schemas/SSLVerificationStatusArguments'

    RuleSetResult:
      type: object
      properties:
        results:
          type: object
          properties:
            id:
              type: integer
              format: int64
              minimum: 1
            last_editor:
              type: string
              format: email
            last_modified:
              type: string
              format: date-time
            name:
              type: string
            is_active:
              type: boolean
            description:
              type: string
            behaviors:
              type: array
              items:
                $ref: '#/components/schemas/Behaviors'
            criteria:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/SSLVerificationStatusCriteria'
            order:
              type: integer
              minimum: 0
        schema_version:
          type: integer
          minimum: 1

    RuleSetResultAll:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        last_editor:
          type: string
          format: email
        last_modified:
          type: string
          format: date-time
        name:
          type: string
        is_active:
          type: boolean
        description:
          type: string
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/Behaviors'
        criteria:
            type: array
            items:
              type: array
              items:
                $ref: '#/components/schemas/SSLVerificationStatusCriteria'
        order:
          type: integer
          minimum: 0

    CreateRuleSetRequest:
      type: object
      properties:
        name:
          type: string
        is_active:
          type: boolean
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/Behaviors'
        criteria:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SSLVerificationStatusCriteria'

    RuleSetResponse:
      type: object
      properties:
        name:
          type: string
        is_active:
          type: boolean
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/Behaviors'
        criteria:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SSLVerificationStatusCriteria'
        last_modified:
          type: string
          format: date-time
        last_editor:
          type: string
          format: email
        id:
          type: integer
          format: int64
          minimum: 1
        order:
          type: integer
          format: int64
          minimum: 1

    RuleSetResponseAll:
      type: object
      properties:
        count:
          type: integer
          format: int64
          minimum: 0
        total_pages:
          type: integer
          format: int64
          minimum: 0
        schema_version:
          type: integer
          format: int32
          default: 3
        links:
          $ref: '#/components/schemas/Links'
        results:
          type: array
          items:
            $ref: '#/components/schemas/RuleSetResultAll'


  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
